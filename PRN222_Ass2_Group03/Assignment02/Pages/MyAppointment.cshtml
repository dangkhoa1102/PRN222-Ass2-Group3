@page
@model Assignment02.Pages.MyAppointmentModel
@{
    ViewData["Title"] = "My Test Drive Appointments";
}

<style>
    body {
        background-color: #f4f6f9;
    }

    .orders-container {
        width: 95%;
        margin: 40px auto;
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        padding: 20px 30px;
    }

    h2 {
        font-weight: 700;
        color: #007bff;
        text-align: center;
        margin-bottom: 25px;
    }

    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 8px;
    }

        .table thead th {
            background-color: #2c3e50;
            color: white;
            font-weight: 600;
            text-align: center;
            padding: 14px;
            border: none;
        }

        .table tbody tr {
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
            transition: 0.2s;
        }

            .table tbody tr:hover {
                transform: scale(1.01);
                background-color: #f9fbff;
            }

        .table td {
            text-align: center;
            padding: 14px;
            border: none;
            vertical-align: middle;
        }

    .badge {
        padding: 7px 14px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .badge-success {
        background-color: #d4edda;
        color: #198754;
    }

    .badge-warning {
        background-color: #fff3cd;
        color: #856404;
    }

    .badge-danger {
        background-color: #f8d7da;
        color: #842029;
    }

    .badge-info {
        background-color: #d1ecf1;
        color: #0c5460;
    }

    .btn-details {
        background: linear-gradient(45deg, #007bff, #0056b3);
        border: none;
        color: white;
        font-weight: 600;
        border-radius: 8px;
        padding: 6px 14px;
        transition: 0.2s;
    }

        .btn-details:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #0056b3, #007bff);
        }

    .btn-cancel {
        background: linear-gradient(45deg, #dc3545, #a71d2a);
        border: none;
        color: white;
        font-weight: 600;
        border-radius: 8px;
        padding: 6px 14px;
        transition: 0.2s;
    }

        .btn-cancel:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #a71d2a, #dc3545);
        }

    .btn-complete {
        background: linear-gradient(45deg, #28a745, #20c997);
        border: none;
        color: white;
        font-weight: 600;
        border-radius: 8px;
        padding: 6px 14px;
        transition: 0.2s;
    }

        .btn-complete:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #20c997, #28a745);
        }

    .btn-paid {
        background: linear-gradient(45deg, #ffc107, #ff8c00);
        border: none;
        color: white;
        font-weight: 600;
        border-radius: 8px;
        padding: 6px 14px;
        transition: 0.2s;
    }

        .btn-paid:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #ff8c00, #ffc107);
        }

    .btn-book {
        background: linear-gradient(45deg, #28a745, #20c997);
        border: none;
        color: white;
        font-weight: 600;
        border-radius: 8px;
        padding: 12px 24px;
        transition: 0.2s;
        text-decoration: none;
        display: inline-block;
    }

        .btn-book:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #20c997, #28a745);
            color: white;
            text-decoration: none;
        }

    .alert-success,
    .alert-danger {
        display: inline-block;
        position: relative;
        left: 10px; 
        top: 0;
        width: auto; 
        max-width: 80%;
        text-align: left;
        border-radius: 8px;
        padding: 10px 16px;
        font-weight: 600;
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.1);
        animation: fadeIn 0.4s ease-in-out;
    }

    .alert-success {
        background-color: #e9fbe9;
        border: 2px solid #28a745;
        color: #155724;
    }

    .alert-danger {
        background-color: #fbeaea;
        border: 2px solid #dc3545;
        color: #842029;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-5px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .orders-container {
            padding: 10px;
        }

        .table td, .table th {
            font-size: 0.85rem;
            padding: 10px;
        }
    }
</style>

<div class="orders-container">
    <h2>My Test Drive Appointments</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    @if (Model.Appointments.Any())
    {
        <table class="table align-middle">
            <thead>
                <tr>
                    <th>Vehicle</th>
                    <th>Dealer</th>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Status</th>
                    <th>Notes</th>
                    <th>Details</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var appointment in Model.Appointments)
            {
                    <tr>
                        <td>@appointment.Vehicle?.Name</td>
                        <td>@appointment.Dealer?.Name</td>
                        <td>@appointment.AppointmentDate.ToString("dd/MM/yyyy")</td>
                        <td>@appointment.AppointmentDate.ToString("HH:mm")</td>
                        <td>
                            @if (appointment.Status?.Equals("completed", StringComparison.OrdinalIgnoreCase) == true)
                            {
                                <span class="badge badge-success">Completed</span>
                            }
                            else if (appointment.Status?.Equals("pending", StringComparison.OrdinalIgnoreCase) == true)
                            {
                                <span class="badge badge-warning">Processing</span>
                            }
                            else if (appointment.Status?.Equals("cancelled", StringComparison.OrdinalIgnoreCase) == true)
                            {
                                <span class="badge badge-danger">Cancelled</span>
                            }
                            else
                            {
                                <span class="badge badge-info">@appointment.Status</span>
                            }
                        </td>
                        <td>
                        @if (!string.IsNullOrEmpty(appointment.Notes))
                        {
                                <span title="@appointment.Notes" style="font-size: 0.9rem;">
                                    @(appointment.Notes.Length > 20 ? appointment.Notes.Substring(0, 20) + "..." : appointment.Notes)
                                </span>
                            }
                            else
                            {
                                <span class="text-muted">—</span>
                            }
                        </td>
                        <td>
                            <a asp-page="/TestDrives/Details" asp-route-id="@appointment.Id" class="btn btn-details">
                                <i class="fas fa-eye"></i> Details
                            </a>
                        </td>
                        <td>
                            @if ((appointment.Status?.ToLower() == "pending" || appointment.Status?.ToLower() == "processing"))
                        {
                            <button type="button" class="btn btn-cancel" onclick="cancelAppointment('@appointment.Id', '@appointment.Vehicle?.Name')">
                                    <i class="fas fa-times"></i> Cancel
                            </button>
                        }
                            @if ((appointment.Status?.ToLower() == "completed"))
                        {
                            <form method="post" asp-page-handler="MarkDone" asp-route-id="@appointment.Id" class="d-inline">
                                    <button type="submit" class="btn btn-complete">
                                        <i class="fas fa-check"></i> Mark Done
                                </button>
                            </form>
                        }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-center mt-4">
            <a asp-page="/BookTestDrive" class="btn-book">
                <i class="fas fa-plus"></i> Book New Appointment
            </a>
        </div>
    }
    else
    {
        <div class="text-center text-muted py-4">
            <i class="fas fa-calendar-times" style="font-size: 3rem; margin-bottom: 20px; color: #6c757d;"></i>
            <h4>No Appointments</h4>
            <p>You don't have any test drive appointments yet.</p>
            <a asp-page="/BookTestDrive" class="btn-book">
                <i class="fas fa-plus"></i> Book New Appointment
            </a>
        </div>
    }
</div>

<!-- SignalR Scripts -->
<script src="~/lib/microsoft-signalr/dist/browser/signalr.min.js"></script>
<script>
    // Get current user ID from session or hidden field
    const currentUserId = '@Model.CurrentUserId';
    
    if (currentUserId) {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/realtimehub")
            .build();

        connection.start().then(function () {
            console.log("SignalR Connected for My Appointments");
            console.log("Current User ID:", currentUserId);
            // Join customer group
            connection.invoke("JoinGroup", `customer_${currentUserId}`).then(function() {
                console.log("Joined customer group:", `customer_${currentUserId}`);
            }).catch(function(err) {
                console.error("Failed to join customer group:", err);
            });
        }).catch(function (err) {
            console.error("SignalR Connection Error: ", err.toString());
        });

        // Listen for test drive status updates
        connection.on("TestDriveUpdated", function (data) {
            console.log(`Test drive updated: ${data.customerName} - ${data.vehicleName} - ${data.status}`);
            
            // Reload the page to show updated status
            setTimeout(() => {
                window.location.reload();
            }, 1000);
        });

        // Listen for page reload notifications
        connection.on("PageReload", function (data) {
            console.log(`Page reload requested: ${data.page} - ${data.action}`);
            if (data.page === "appointments") {
                setTimeout(() => {
                    window.location.reload();
                }, 1000);
            }
        });

        // Listen for test drive cancellations
        connection.on("TestDriveCancelled", function (data) {
            console.log(`Test drive cancelled: ${data.customerName} - ${data.vehicleName}`);
            console.log('Reloading page in 1 second...');
            setTimeout(() => {
                console.log('Page reload triggered');
                window.location.reload();
            }, 1000);
        });

        // Show notification function
        function showNotification(message) {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = 'alert alert-info alert-dismissible fade show position-fixed';
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            notification.innerHTML = `
                <i class="fas fa-info-circle me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }
    }
</script>

<script>
function cancelAppointment(appointmentId, vehicleName) {
    const reason = prompt('Please enter the reason for cancelling the appointment:');
    if (reason && reason.trim() !== '') {
        if (confirm(`Are you sure you want to cancel the appointment for ${vehicleName} with reason: "${reason}"?`)) {
            // Create a form to submit the cancellation
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/MyAppointment?handler=Cancel';
            
            // Add appointment ID and cancellation reason
            const appointmentIdInput = document.createElement('input');
            appointmentIdInput.type = 'hidden';
            appointmentIdInput.name = 'id';
            appointmentIdInput.value = appointmentId;
            form.appendChild(appointmentIdInput);
            
            const cancelInput = document.createElement('input');
            cancelInput.type = 'hidden';
            cancelInput.name = 'CancelNote';
            cancelInput.value = reason.trim();
            form.appendChild(cancelInput);
            
            // Add anti-forgery token
            const token = document.querySelector('input[name="__RequestVerificationToken"]');
            if (token) {
                form.appendChild(token.cloneNode());
            }
            
            document.body.appendChild(form);
            form.submit();
        }
    } else if (reason !== null) {
        alert('Please enter a reason for cancelling the appointment!');
    }
}
</script>