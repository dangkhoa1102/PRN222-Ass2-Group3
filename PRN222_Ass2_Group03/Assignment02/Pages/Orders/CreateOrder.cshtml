@page "/Orders/CreateOrder"
@model Assignment02.Pages.Orders.CreateOrderModel
@{
    ViewData["Title"] = "Create Order";
}

<style>
    body {
        background-color: #f4f6f9;
    }

    .create-container {
        max-width: 800px;
        margin: 40px auto;
        background: #fff;
        border-radius: 12px;
        padding: 30px 40px;
        box-shadow: 0 3px 12px rgba(0, 0, 0, 0.1);
    }

    .create-header {
        text-align: center;
        color: #007bff;
        font-weight: 700;
        margin-bottom: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        font-weight: 600;
        color: #333;
        margin-bottom: 8px;
        display: block;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
    }

    .form-control:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
    }

    .form-select {
        width: 100%;
        padding: 12px 16px;
        border: 2px solid #e9ecef;
        border-radius: 8px;
        font-size: 1rem;
        background-color: #fff;
        transition: border-color 0.3s ease;
    }

    .form-select:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
    }

    .btn-create {
        background: linear-gradient(45deg, #28a745, #20c997);
        color: #fff;
        border: none;
        font-weight: 600;
        padding: 12px 24px;
        border-radius: 8px;
        transition: 0.2s;
        cursor: pointer;
        font-size: 1rem;
    }

    .btn-create:hover {
        transform: scale(1.05);
        background: linear-gradient(45deg, #20c997, #28a745);
    }

    .btn-cancel {
        background: linear-gradient(45deg, #6c757d, #5a6268);
        color: #fff;
        border: none;
        font-weight: 600;
        padding: 12px 24px;
        border-radius: 8px;
        transition: 0.2s;
        cursor: pointer;
        font-size: 1rem;
        text-decoration: none;
        display: inline-block;
        margin-right: 10px;
    }

    .btn-cancel:hover {
        transform: scale(1.05);
        background: linear-gradient(45deg, #5a6268, #6c757d);
        color: white;
    }

    .customer-info {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-top: 10px;
        border-left: 4px solid #007bff;
    }

    .vehicle-info {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-top: 10px;
        border-left: 4px solid #28a745;
    }

    .dealer-info {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-top: 10px;
        border-left: 4px solid #ffc107;
    }

    .info-title {
        font-weight: 600;
        color: #007bff;
        margin-bottom: 10px;
    }

    .text-danger {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 5px;
    }

    .alert {
        border-radius: 8px;
        border: none;
        margin-bottom: 20px;
    }

    .alert-success {
        background: linear-gradient(135deg, #d4edda, #c3e6cb);
        color: #198754;
    }

    .alert-danger {
        background: linear-gradient(135deg, #f8d7da, #f5c6cb);
        color: #842029;
    }

    .vehicle-info-card {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 20px;
        margin: 20px 0;
        border-left: 4px solid #28a745;
    }

    .vehicle-info-title {
        font-weight: 600;
        color: #28a745;
        margin-bottom: 15px;
        font-size: 1.1rem;
    }

    .vehicle-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
    }

    .vehicle-detail-item {
        background: white;
        padding: 10px;
        border-radius: 6px;
        border-left: 3px solid #007bff;
    }

    .vehicle-detail-label {
        font-weight: 600;
        color: #007bff;
        font-size: 0.9rem;
    }

    .vehicle-detail-value {
        color: #495057;
        margin-top: 5px;
    }

    .vehicle-image {
        max-width: 100%;
        max-height: 200px;
        border-radius: 8px;
        border: 1px solid #dee2e6;
        margin-top: 10px;
    }

    .no-image {
        text-align: center;
        color: #6c757d;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 8px;
        margin-top: 10px;
    }
</style>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center" style="margin: 1rem 2rem;">
        <i class="fas fa-check-circle me-2"></i>
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center" style="margin: 1rem 2rem;">
        <i class="fas fa-exclamation-triangle me-2"></i>
        @TempData["ErrorMessage"]
    </div>
}

<div class="create-container">
    <h2 class="create-header">üõí Create New Order</h2>
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <form method="post">
        <div class="form-group">
            <label class="form-label" for="OrderViewModel_CustomerId">Select Customer *</label>
            <select asp-for="OrderViewModel.CustomerId" class="form-select" id="customerSelect" required>
                <option value="">-- Choose a customer --</option>
                @foreach (var customer in Model.Customers)
                {
                    <option value="@customer.Value">@customer.Text</option>
                }
            </select>
            <span asp-validation-for="OrderViewModel.CustomerId" class="text-danger"></span>
            
            <!-- Customer Info Display -->
            <div id="customerInfo" class="customer-info" style="display: none;">
                <div class="info-title">üë§ Customer Information</div>
                <div id="customerDetails"></div>
            </div>
        </div>

        <div class="form-group">
            <label class="form-label" for="OrderViewModel_DealerId">Select Dealer *</label>
            <select asp-for="OrderViewModel.DealerId" class="form-select" id="dealerSelect" required>
                <option value="">-- Choose a dealer --</option>
                @foreach (var dealer in Model.Dealers)
                {
                    <option value="@dealer.Value">@dealer.Text</option>
                }
            </select>
            <span asp-validation-for="OrderViewModel.DealerId" class="text-danger"></span>
            
            <!-- Dealer Info Display -->
            <div id="dealerInfo" class="dealer-info" style="display: none;">
                <div class="info-title">üè¢ Dealer Information</div>
                <div id="dealerDetails"></div>
            </div>
        </div>

        <div class="form-group">
            <label class="form-label" for="OrderViewModel_VehicleId">Select Vehicle *</label>
            <select asp-for="OrderViewModel.VehicleId" class="form-select" id="vehicleSelect" required>
                <option value="">-- Choose a vehicle --</option>
                @foreach (var vehicle in Model.Vehicles)
                {
                    <option value="@vehicle.Value">@vehicle.Text</option>
                }
            </select>
            <span asp-validation-for="OrderViewModel.VehicleId" class="text-danger"></span>
            @if (Model.OrderViewModel.VehicleId != Guid.Empty)
            {
                <small class="form-text text-muted">Vehicle pre-selected from details page.</small>
            }
            
            <!-- Vehicle Info Display -->
            <div id="vehicleInfoCard" class="vehicle-info-card" style="display: none;">
                <!-- Vehicle info will be populated by JavaScript -->
            </div>
        </div>

        <div class="form-group">
            <label class="form-label" for="OrderViewModel_PreferredDeliveryDate">Preferred Delivery Date (Optional)</label>
            <input asp-for="OrderViewModel.PreferredDeliveryDate" type="date" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <small class="form-text text-muted">Select preferred delivery date. Cannot be in the past.</small>
            <span asp-validation-for="OrderViewModel.PreferredDeliveryDate" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label class="form-label" for="OrderViewModel_Notes">Notes</label>
            <textarea asp-for="OrderViewModel.Notes" class="form-control" rows="4" 
                      placeholder="Enter any additional notes for this order..."></textarea>
            <span asp-validation-for="OrderViewModel.Notes" class="text-danger"></span>
        </div>

        <div class="text-center mt-4">
            <a href="/Admin/ManageOrders" class="btn-cancel">
                <i class="fas fa-arrow-left"></i> Cancel
            </a>
            <button type="submit" class="btn-create">
                <i class="fas fa-plus"></i> Create Order
            </button>
        </div>
    </form>
</div>

<script>
    // Customer selection handler
    document.getElementById('customerSelect').addEventListener('change', function() {
        const customerInfo = document.getElementById('customerInfo');
        const customerDetails = document.getElementById('customerDetails');
        
        if (this.value) {
            const selectedText = this.options[this.selectedIndex].text;
            customerDetails.innerHTML = `
                <div><strong>Selected:</strong> ${selectedText}</div>
            `;
            customerInfo.style.display = 'block';
        } else {
            customerInfo.style.display = 'none';
        }
    });

    // Dealer selection handler
    document.getElementById('dealerSelect').addEventListener('change', function() {
        const dealerInfo = document.getElementById('dealerInfo');
        const dealerDetails = document.getElementById('dealerDetails');
        
        if (this.value) {
            const selectedText = this.options[this.selectedIndex].text;
            dealerDetails.innerHTML = `
                <div><strong>Selected:</strong> ${selectedText}</div>
            `;
            dealerInfo.style.display = 'block';
        } else {
            dealerInfo.style.display = 'none';
        }
    });

    // Vehicle selection handler
    document.getElementById('vehicleSelect').addEventListener('change', async function() {
        const vehicleInfoCard = document.getElementById('vehicleInfoCard');
        
        if (this.value) {
            await updateVehicleInfo(this.value);
        } else {
            vehicleInfoCard.style.display = 'none';
        }
    });

    async function updateVehicleInfo(vehicleId) {
        try {
            const response = await fetch(`/Orders/CreateOrder?handler=GetVehicleInfo&vehicleId=${vehicleId}`);
            if (response.ok) {
                const vehicleInfo = await response.json();
                displayVehicleInfo(vehicleInfo);
            }
        } catch (error) {
            console.error('Error loading vehicle info:', error);
        }
    }

    function displayVehicleInfo(vehicle) {
        const vehicleInfoCard = document.getElementById('vehicleInfoCard');
        if (vehicleInfoCard) {
            vehicleInfoCard.innerHTML = `
                <div class="vehicle-info-title">üöó Vehicle Information</div>
                <div class="vehicle-details">
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Vehicle Name</div>
                        <div class="vehicle-detail-value">${vehicle.name}</div>
                    </div>
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Brand</div>
                        <div class="vehicle-detail-value">${vehicle.brand}</div>
                    </div>
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Model</div>
                        <div class="vehicle-detail-value">${vehicle.model}</div>
                    </div>
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Year</div>
                        <div class="vehicle-detail-value">${vehicle.year}</div>
                    </div>
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Price</div>
                        <div class="vehicle-detail-value">${vehicle.price.toLocaleString()} ‚Ç´</div>
                    </div>
                </div>
                ${vehicle.images ? 
                    `<img src="${vehicle.images}" alt="${vehicle.name}" class="vehicle-image" />` : 
                    `<div class="no-image">
                        <i class="fas fa-car" style="font-size: 2rem; margin-bottom: 10px;"></i>
                        <p>No image available</p>
                    </div>`
                }
            `;
            vehicleInfoCard.style.display = 'block';
        }
    }

    // Auto-load vehicle info if vehicleId is provided in URL
    document.addEventListener('DOMContentLoaded', function() {
        const urlParams = new URLSearchParams(window.location.search);
        const vehicleId = urlParams.get('vehicleId');
        
        if (vehicleId) {
            const vehicleSelect = document.getElementById('vehicleSelect');
            vehicleSelect.value = vehicleId;
            // Trigger change event to show vehicle info
            updateVehicleInfo(vehicleId);
        }

        // Form validation for delivery date
        const form = document.querySelector('form');
        if (form) {
            form.addEventListener('submit', function(event) {
                const deliveryDateInput = document.querySelector('input[name="OrderViewModel.PreferredDeliveryDate"]');
                if (deliveryDateInput && deliveryDateInput.value) {
                    const selectedDate = new Date(deliveryDateInput.value);
                    const now = new Date();
                    now.setHours(0, 0, 0, 0);
                    
                    if (selectedDate < now) {
                        event.preventDefault();
                        alert('Preferred delivery date cannot be in the past. Please select a future date.');
                        deliveryDateInput.focus();
                        return false;
                    }
                }
            });
        }
    });
</script>
