@page
@model Assignment02.Pages.Orders.EditModel
@{
    ViewData["Title"] = "Edit Order";
    Layout = "_Layout";
}

<div class="container py-4">
    <!-- Page Header -->
    <div class="page-header">
        <a asp-page="./Index" class="back-btn">
            <i class="bi bi-arrow-left"></i> Back
        </a>
        <div class="page-title">
            <i class="bi bi-pencil-square"></i>
            <div>
                <h1>Edit Order</h1>
                <p>Order #@Model.Order.OrderNumber</p>
            </div>
        </div>
    </div>

    <!-- Error Message -->
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i>
            <strong>Error!</strong> @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Form -->
    <form method="post" id="editOrderForm">
        <input type="hidden" asp-for="Order.Id" />
        <input type="hidden" asp-for="Order.OrderNumber" />
        <input type="hidden" asp-for="Order.CreatedAt" />

        <div class="form-grid">
            <!-- Left Column - Customer & Vehicle Info -->
            <div class="card">
                <div class="card-header">
                    <i class="bi bi-info-circle"></i>
                    <h3>Order Information</h3>
                </div>

                <div class="form-group">
                    <label class="form-label">Customer</label>
                    @if (Model.Order?.Customer != null)
                    {
                        <input type="text" class="form-input"
                               value="@Model.Order.Customer.FullName (@Model.Order.Customer.Phone)"
                               readonly />
                        <input type="hidden" asp-for="Order.CustomerId" />
                    }
                    else
                    {
                        <input type="text" class="form-input"
                               value="Customer information not available" readonly />
                        <input type="hidden" asp-for="Order.CustomerId" />
                    }
                </div>

                <div class="form-group">
                    <label asp-for="Order.VehicleId" class="form-label">
                        Vehicle
                    </label>
                    @if (Model.Vehicles != null && Model.Vehicles.Any())
                    {
                        <select asp-for="Order.VehicleId" class="form-input" asp-items="Model.Vehicles">
                            <option value="">-- Keep current vehicle --</option>
                        </select>
                    }
                    else
                    {
                        @if (Model.Order?.Vehicle != null)
                        {
                            <div class="vehicle-display">
                                <i class="bi bi-ev-front"></i>
                                <span>@Model.Order.Vehicle.Brand @Model.Order.Vehicle.Model</span>
                            </div>
                        }
                        else
                        {
                            <input type="text" class="form-input"
                                   value="Vehicle information loading..." readonly />
                        }
                        <input type="hidden" asp-for="Order.VehicleId" />
                    }
                    <span asp-validation-for="Order.VehicleId" class="text-danger small"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Order.TotalAmount" class="form-label">
                        Total Amount <span class="required">*</span>
                    </label>
                    <div class="amount-input-group">
                        <span class="amount-prefix">VND</span>
                        <input asp-for="Order.TotalAmount"
                               type="text"
                               class="form-input amount-input"
                               required
                               pattern="[0-9,]+"
                               placeholder="0" />
                    </div>
                    <span asp-validation-for="Order.TotalAmount" class="text-danger small"></span>
                </div>

                <div class="date-display">
                    <i class="bi bi-calendar-check"></i>
                    <span>Created: @(Model.Order.CreatedAt?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</span>
                </div>

                @if (Model.Order?.UpdatedAt != null)
                {
                    <div class="date-display mt-2">
                        <i class="bi bi-clock-history"></i>
                        <span>Last updated: @Model.Order.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</span>
                    </div>
                }
            </div>

            <!-- Right Column - Status Management -->
            <div class="card">
                <div class="card-header">
                    <i class="bi bi-toggles2"></i>
                    <h3>Order Status</h3>
                </div>

                <div class="form-group">
                    <label asp-for="Order.PaymentStatus" class="form-label">
                        <i class="bi bi-credit-card-2-front"></i>
                        Payment Status <span class="required">*</span>
                    </label>
                    <select asp-for="Order.PaymentStatus" class="form-input" required>
                        <option value="">-- Select Payment Status --</option>
                        <option value="Unpaid">Unpaid</option>
                        <option value="Paid">Paid</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="Order.Status" class="form-label">
                        <i class="bi bi-truck"></i>
                        Delivery Status <span class="required">*</span>
                    </label>
                    <select asp-for="Order.Status" class="form-input" required>
                        <option value="">-- Select Status --</option>
                        <option value="confirmed">Confirmed</option>
                        <option value="delivering">Delivering</option>
                        <option value="completed">Completed</option>
                        <option value="cancelled">Cancelled</option>
                    </select>
                    <span asp-validation-for="Order.Status" class="text-danger small"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Order.Notes" class="form-label">
                        <i class="bi bi-chat-left-text"></i>
                        Additional Notes
                    </label>
                    <textarea asp-for="Order.Notes"
                              class="form-input"
                              rows="6"
                              placeholder="Add delivery instructions, special requests, or any additional information..."></textarea>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="form-actions">
            <a asp-page="./Index" class="btn btn-cancel">
                <i class="bi bi-x-circle"></i> Cancel
            </a>
            <button type="submit" id="submitBtn" class="btn btn-primary">
                <i class="bi bi-check-circle-fill"></i> Save Changes
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('editOrderForm');
            const submitBtn = document.getElementById('submitBtn');
            const amountInput = document.querySelector('[name="Order.TotalAmount"]');

            // Format amount with commas
            function formatAmount(input) {
                let value = input.value.replace(/,/g, '');
                if (!isNaN(value) && value !== '') {
                    input.value = parseInt(value).toLocaleString('en-US');
                }
            }

            if (amountInput) {
                formatAmount(amountInput);
                amountInput.addEventListener('input', function() {
                    formatAmount(this);
                });
            }

            form.addEventListener('submit', function (e) {
                // Remove commas before submission
                if (amountInput) {
                    amountInput.value = amountInput.value.replace(/,/g, '');
                }

                const totalAmount = parseFloat(amountInput.value);
                const status = document.querySelector('[name="Order.Status"]').value;
                const paymentStatus = document.querySelector('[name="Order.PaymentStatus"]').value;

                let errors = [];

                if (!totalAmount || totalAmount <= 0) {
                    errors.push('Total amount must be greater than 0');
                }

                if (!status) {
                    errors.push('Please select an order status');
                }

                if (!paymentStatus) {
                    errors.push('Please select a payment status');
                }

                if (errors.length > 0) {
                    e.preventDefault();
                    alert('❌ Please fix the following errors:\n\n• ' + errors.join('\n• '));
                    if (amountInput) formatAmount(amountInput);
                    return false;
                }

                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Saving Changes...';
            });
        });
    </script>
}

@section Styles {
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/edit.css" />

}