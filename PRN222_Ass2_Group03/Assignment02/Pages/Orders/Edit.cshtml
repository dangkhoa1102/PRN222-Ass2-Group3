@page
@model Assignment02.Pages.Orders.EditModel
@{
    ViewData["Title"] = "Edit Order";
}

<div class="container py-4">
    <!-- Page Header -->
    <div class="page-header">
        <a asp-page="./Index" class="back-btn">
            <i class="bi bi-arrow-left"></i> Back
        </a>
        <div class="page-title">
            <i class="bi bi-pencil-square"></i>
            <div>
                <h1>Edit Order</h1>
                <p>Order #@Model.Order.OrderNumber</p>
            </div>
        </div>
    </div>

    <!-- Error Message -->
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i>
            <strong>Error!</strong> @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Form -->
    <form method="post" id="editOrderForm">
        <input type="hidden" asp-for="Order.Id" />
        <input type="hidden" asp-for="Order.OrderNumber" />
        <input type="hidden" asp-for="Order.CreatedAt" />

        <div class="form-grid">
            <!-- Left Column - Customer & Vehicle Info -->
            <div class="card">
                <div class="card-header">
                    <i class="bi bi-info-circle"></i>
                    <h3>Order Information</h3>
                </div>

                <div class="form-group">
                    <label class="form-label">Customer</label>
                    @if (Model.Order?.Customer != null)
                    {
                        <input type="text" class="form-input"
                               value="@Model.Order.Customer.FullName (@Model.Order.Customer.Phone)"
                               readonly />
                        <input type="hidden" asp-for="Order.CustomerId" />
                    }
                    else
                    {
                        <input type="text" class="form-input"
                               value="Customer information not available" readonly />
                        <input type="hidden" asp-for="Order.CustomerId" />
                    }
                </div>

                <div class="form-group">
                    <label asp-for="Order.VehicleId" class="form-label">
                        Vehicle
                    </label>
                    @if (Model.Vehicles != null && Model.Vehicles.Any())
                    {
                        <select asp-for="Order.VehicleId" class="form-input" asp-items="Model.Vehicles">
                            <option value="">-- Keep current vehicle --</option>
                        </select>
                    }
                    else
                    {
                        @if (Model.Order?.Vehicle != null)
                        {
                            <div class="vehicle-display">
                                <i class="bi bi-ev-front"></i>
                                <span>@Model.Order.Vehicle.Brand @Model.Order.Vehicle.Model</span>
                            </div>
                        }
                        else
                        {
                            <input type="text" class="form-input"
                                   value="Vehicle information loading..." readonly />
                        }
                        <input type="hidden" asp-for="Order.VehicleId" />
                    }
                    <span asp-validation-for="Order.VehicleId" class="text-danger small"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Order.TotalAmount" class="form-label">
                        Total Amount <span class="required">*</span>
                    </label>
                    <div class="amount-input-group">
                        <span class="amount-prefix">VND</span>
                        <input asp-for="Order.TotalAmount"
                               type="text"
                               class="form-input amount-input"
                               required
                               pattern="[0-9,]+"
                               placeholder="0" />
                    </div>
                    <span asp-validation-for="Order.TotalAmount" class="text-danger small"></span>
                </div>

                <div class="date-display">
                    <i class="bi bi-calendar-check"></i>
                    <span>Created: @(Model.Order.CreatedAt?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")</span>
                </div>

                @if (Model.Order?.UpdatedAt != null)
                {
                    <div class="date-display mt-2">
                        <i class="bi bi-clock-history"></i>
                        <span>Last updated: @Model.Order.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</span>
                    </div>
                }
            </div>

            <!-- Right Column - Status Management -->
            <div class="card">
                <div class="card-header">
                    <i class="bi bi-toggles2"></i>
                    <h3>Order Status</h3>
                </div>

                <div class="form-group">
                    <label asp-for="Order.PaymentStatus" class="form-label">
                        <i class="bi bi-credit-card-2-front"></i>
                        Payment Status <span class="required">*</span>
                    </label>
                    <select asp-for="Order.PaymentStatus" class="form-input" required>
                        <option value="">-- Select Payment Status --</option>
                        <option value="Unpaid">Unpaid</option>
                        <option value="Paid">Paid</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="Order.Status" class="form-label">
                        <i class="bi bi-truck"></i>
                        Delivery Status <span class="required">*</span>
                    </label>
                    <select asp-for="Order.Status" class="form-input" required>
                        <option value="">-- Select Status --</option>
                        <option value="confirmed">Confirmed</option>
                        <option value="delivering">Delivering</option>
                        <option value="completed">Completed</option>
                        <option value="cancelled">Cancelled</option>
                    </select>
                    <span asp-validation-for="Order.Status" class="text-danger small"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Order.Notes" class="form-label">
                        <i class="bi bi-chat-left-text"></i>
                        Additional Notes
                    </label>
                    <textarea asp-for="Order.Notes"
                              class="form-input"
                              rows="6"
                              placeholder="Add delivery instructions, special requests, or any additional information..."></textarea>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="form-actions">
            <a asp-page="./Index" class="btn btn-cancel">
                <i class="bi bi-x-circle"></i> Cancel
            </a>
            <button type="submit" id="submitBtn" class="btn btn-primary">
                <i class="bi bi-check-circle-fill"></i> Save Changes
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('editOrderForm');
            const submitBtn = document.getElementById('submitBtn');
            const amountInput = document.querySelector('[name="Order.TotalAmount"]');

            // Format amount with commas
            function formatAmount(input) {
                let value = input.value.replace(/,/g, '');
                if (!isNaN(value) && value !== '') {
                    input.value = parseInt(value).toLocaleString('en-US');
                }
            }

            if (amountInput) {
                formatAmount(amountInput);
                amountInput.addEventListener('input', function() {
                    formatAmount(this);
                });
            }

            form.addEventListener('submit', function (e) {
                // Remove commas before submission
                if (amountInput) {
                    amountInput.value = amountInput.value.replace(/,/g, '');
                }

                const totalAmount = parseFloat(amountInput.value);
                const status = document.querySelector('[name="Order.Status"]').value;
                const paymentStatus = document.querySelector('[name="Order.PaymentStatus"]').value;

                let errors = [];

                if (!totalAmount || totalAmount <= 0) {
                    errors.push('Total amount must be greater than 0');
                }

                if (!status) {
                    errors.push('Please select an order status');
                }

                if (!paymentStatus) {
                    errors.push('Please select a payment status');
                }

                if (errors.length > 0) {
                    e.preventDefault();
                    alert('❌ Please fix the following errors:\n\n• ' + errors.join('\n• '));
                    if (amountInput) formatAmount(amountInput);
                    return false;
                }

                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Saving Changes...';
            });
        });
    </script>
}

@section Styles {
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Plus Jakarta Sans', -apple-system, BlinkMacSystemFont, sans-serif;
            background: #f8f9fd;
            min-height: 100vh;
            color: #1e293b;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 2rem 2.5rem;
        }

        /* Page Header */
        .page-header {
            margin-bottom: 2rem;
        }

        .back-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            color: #64748b;
            text-decoration: none;
            font-weight: 600;
            font-size: 0.9rem;
            margin-bottom: 1rem;
            transition: all 0.3s;
        }

            .back-btn:hover {
                color: #667eea;
                transform: translateX(-4px);
            }

        .page-title {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

            .page-title > i {
                width: 56px;
                height: 56px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border-radius: 16px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 1.5rem;
            }

            .page-title h1 {
                font-size: 2rem;
                font-weight: 800;
                color: #1e293b;
                margin: 0;
            }

            .page-title p {
                color: #64748b;
                font-size: 0.9rem;
                margin: 0;
            }

        /* Form Grid */
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        /* Card */
        .card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
            border: 1px solid #e2e8f0;
        }

        .card-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1.75rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #f1f5f9;
        }

            .card-header i {
                width: 40px;
                height: 40px;
                background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
                color: #0284c7;
                border-radius: 12px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 1.25rem;
            }

            .card-header h3 {
                font-size: 1.125rem;
                font-weight: 700;
                color: #1e293b;
                margin: 0;
            }

        /* Form Elements */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: #334155;
            font-size: 0.875rem;
            margin-bottom: 0.5rem;
        }

            .form-label i {
                margin-right: 0.25rem;
            }

        .required {
            color: #ef4444;
        }

        .form-input {
            width: 100%;
            padding: 0.875rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            font-size: 0.9375rem;
            font-weight: 500;
            color: #1e293b;
            background: #ffffff;
            transition: all 0.3s;
        }

            .form-input:focus {
                outline: none;
                border-color: #667eea;
                background: #fafbff;
                box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            }

            .form-input:read-only {
                background: #f8fafc;
                color: #64748b;
                cursor: not-allowed;
            }

        select.form-input {
            cursor: pointer;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23475569' viewBox='0 0 16 16'%3E%3Cpath d='M8 11L3 6h10l-5 5z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 1rem center;
            padding-right: 3rem;
        }

        textarea.form-input {
            resize: vertical;
            min-height: 100px;
            font-family: inherit;
        }

        /* Amount Input */
        .amount-input-group {
            position: relative;
            display: flex;
            align-items: center;
        }

        .amount-prefix {
            position: absolute;
            left: 1rem;
            font-weight: 700;
            color: #667eea;
            font-size: 0.95rem;
            pointer-events: none;
            z-index: 10;
        }

        .amount-input {
            padding-left: 4.5rem !important;
            font-size: 1.25rem !important;
            font-weight: 700 !important;
            color: #0f172a !important;
        }

        /* Vehicle Display */
        .vehicle-display {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
            border: 2px solid #bae6fd;
            border-radius: 12px;
            font-weight: 600;
            color: #0c4a6e;
        }

            .vehicle-display i {
                font-size: 2rem;
                color: #0284c7;
            }

        /* Date Display */
        .date-display {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.875rem 1rem;
            background: #f1f5f9;
            border-radius: 10px;
            font-size: 0.875rem;
            color: #475569;
            margin-top: 1rem;
        }

            .date-display i {
                color: #667eea;
                font-size: 1.125rem;
            }

        /* Alerts */
        .alert {
            padding: 1rem 1.25rem;
            border-radius: 12px;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.9rem;
            font-weight: 500;
            margin-bottom: 1.5rem;
            border: none;
        }

        .alert-danger {
            background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
            color: #991b1b;
            border-left: 4px solid #ef4444;
        }

        /* Action Buttons */
        .form-actions {
            padding-top: 2rem;
            border-top: 2px solid #f1f5f9;
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
        }

        .btn {
            padding: 0.875rem 2rem;
            border-radius: 12px;
            font-weight: 700;
            font-size: 0.9375rem;
            cursor: pointer;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            border: none;
            text-decoration: none;
        }

        .btn-cancel {
            background: #f8fafc;
            color: #64748b;
            border: 2px solid #e2e8f0;
        }

            .btn-cancel:hover {
                background: #f1f5f9;
                border-color: #cbd5e1;
                transform: translateY(-2px);
                color: #64748b;
            }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.35);
        }

            .btn-primary:hover:not(:disabled) {
                transform: translateY(-2px);
                box-shadow: 0 12px 28px rgba(102, 126, 234, 0.45);
            }

            .btn-primary:disabled {
                opacity: 0.6;
                cursor: not-allowed;
            }

        /* Responsive */
        @@media (max-width: 1024px) {
            .form-grid

        {
            grid-template-columns: 1fr;
        }

        }

        @@media (max-width: 640px) {
            .container

        {
            padding: 1.5rem 1rem;
        }

        .card {
            padding: 1.5rem;
        }

        .page-title h1 {
            font-size: 1.5rem;
        }

        .form-actions {
            flex-direction: column-reverse;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }

        }
    </style>
}