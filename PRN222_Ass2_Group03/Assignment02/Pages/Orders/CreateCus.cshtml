@page
@model Assignment02.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Create Order";
}

<style>
    body {
        background-color: #f4f6f9;
    }

    .create-container {
        width: 90%;
        max-width: 800px;
        margin: 50px auto;
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        padding: 30px 40px;
        transition: 0.3s;
    }

        .create-container:hover {
            transform: scale(1.01);
            box-shadow: 0 4px 14px rgba(0, 0, 0, 0.08);
        }

    h2 {
        font-weight: 700;
        color: #007bff;
        text-align: center;
        margin-bottom: 25px;
    }

    label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 6px;
        display: inline-block;
    }

    select, textarea {
        width: 100%;
        padding: 12px 14px;
        border-radius: 8px;
        border: 1px solid #ccc;
        margin-bottom: 20px;
        font-size: 1rem;
        transition: 0.2s;
    }

        select:focus, textarea:focus {
            border-color: #007bff;
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
        }

    textarea {
        resize: none;
        height: 120px;
    }

    .btn-submit {
        width: 100%;
        background: linear-gradient(45deg, #007bff, #0056b3);
        border: none;
        color: white;
        padding: 12px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1.05rem;
        transition: 0.2s;
        box-shadow: 0 2px 6px rgba(0, 123, 255, 0.3);
    }

        .btn-submit:hover {
            transform: scale(1.03);
            background: linear-gradient(45deg, #0056b3, #007bff);
            box-shadow: 0 3px 8px rgba(0, 86, 179, 0.4);
        }

    .alert {
        margin-top: 20px;
        border-radius: 8px;
        font-weight: 500;
        text-align: center;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }

    .vehicle-info-card {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 20px;
        margin: 20px 0;
        border-left: 4px solid #28a745;
    }

    .vehicle-info-title {
        font-weight: 600;
        color: #28a745;
        margin-bottom: 15px;
        font-size: 1.1rem;
    }

    .vehicle-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
    }

    .vehicle-detail-item {
        background: white;
        padding: 10px;
        border-radius: 6px;
        border-left: 3px solid #007bff;
    }

    .vehicle-detail-label {
        font-weight: 600;
        color: #007bff;
        font-size: 0.9rem;
    }

    .vehicle-detail-value {
        color: #495057;
        margin-top: 5px;
    }

    .vehicle-image {
        max-width: 100%;
        max-height: 200px;
        border-radius: 8px;
        border: 1px solid #dee2e6;
        margin-top: 10px;
    }

    .no-image {
        text-align: center;
        color: #6c757d;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 8px;
        margin-top: 10px;
    }
</style>

<script>
    // Vehicle selection handler
    document.addEventListener('DOMContentLoaded', function() {
        const vehicleSelect = document.getElementById('SelectedVehicleId');
        if (vehicleSelect) {
            vehicleSelect.addEventListener('change', async function() {
                const selectedVehicleId = this.value;
                if (selectedVehicleId) {
                    await updateVehicleInfo(selectedVehicleId);
                } else {
                    hideVehicleInfo();
                }
            });
            
            // Auto-select vehicle if vehicleId is provided in URL
            const urlParams = new URLSearchParams(window.location.search);
            const vehicleId = urlParams.get('vehicleId');
            
            if (vehicleId) {
                vehicleSelect.value = vehicleId;
                // Trigger change event to show vehicle info
                vehicleSelect.dispatchEvent(new Event('change'));
            }
        }
    });

    async function updateVehicleInfo(vehicleId) {
        try {
            const response = await fetch(`/Orders/CreateCus?handler=GetVehicleInfo&vehicleId=${vehicleId}`);
            if (response.ok) {
                const vehicleInfo = await response.json();
                displayVehicleInfo(vehicleInfo);
            }
        } catch (error) {
            console.error('Error loading vehicle info:', error);
        }
    }

    function displayVehicleInfo(vehicle) {
        const vehicleInfoCard = document.getElementById('vehicleInfoCard');
        if (vehicleInfoCard) {
            vehicleInfoCard.innerHTML = `
                <div class="vehicle-info-title">🚗 Vehicle Information</div>
                <div class="vehicle-details">
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Vehicle Name</div>
                        <div class="vehicle-detail-value">${vehicle.name}</div>
                    </div>
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Brand</div>
                        <div class="vehicle-detail-value">${vehicle.brand}</div>
                    </div>
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Model</div>
                        <div class="vehicle-detail-value">${vehicle.model}</div>
                    </div>
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Year</div>
                        <div class="vehicle-detail-value">${vehicle.year}</div>
                    </div>
                    <div class="vehicle-detail-item">
                        <div class="vehicle-detail-label">Price</div>
                        <div class="vehicle-detail-value">${vehicle.price.toLocaleString()} ₫</div>
                    </div>
                </div>
                ${vehicle.images ? 
                    `<img src="${vehicle.images}" alt="${vehicle.name}" class="vehicle-image" />` : 
                    `<div class="no-image">
                        <i class="fas fa-car" style="font-size: 2rem; margin-bottom: 10px;"></i>
                        <p>No image available</p>
                    </div>`
                }
            `;
            vehicleInfoCard.style.display = 'block';
        }
    }

    function hideVehicleInfo() {
        const vehicleInfoCard = document.getElementById('vehicleInfoCard');
        if (vehicleInfoCard) {
            vehicleInfoCard.style.display = 'none';
        }
    }

    // Form validation
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        if (form) {
            form.addEventListener('submit', function(event) {
                const deliveryDateInput = document.getElementById('PreferredDeliveryDate');
                if (deliveryDateInput && deliveryDateInput.value) {
                    const selectedDate = new Date(deliveryDateInput.value);
                    const now = new Date();
                    now.setHours(0, 0, 0, 0);
                    
                    if (selectedDate < now) {
                        event.preventDefault();
                        alert('Preferred delivery date cannot be in the past. Please select a future date.');
                        deliveryDateInput.focus();
                        return false;
                    }
                }
            });
        }
    });
</script>

<div class="create-container">
    <h2>Create New Order</h2>

    <form method="post">
        <div class="form-group mb-3">
            <label for="dealer">Choose Dealer</label>
            <select asp-for="SelectedDealerId" asp-items="Model.DealersList" required>
                <option value="">-- Select Dealer --</option>
            </select>
        </div>

        <div class="form-group mb-3">
            <label for="vehicle">Choose Vehicle</label>
            <select asp-for="SelectedVehicleId" asp-items="Model.VehiclesList" required>
                <option value="">-- Select Vehicle --</option>
            </select>
            @if (Model.SelectedVehicleId != Guid.Empty)
            {
                <small class="form-text text-muted">Vehicle pre-selected from details page.</small>
            }
        </div>

        <!-- Vehicle Information Display -->
        <div id="vehicleInfoCard" class="vehicle-info-card" style="display: none;">
            <!-- Vehicle info will be populated by JavaScript -->
        </div>

        <div class="form-group mb-3">
            <label for="PreferredDeliveryDate">Preferred Delivery Date (Optional)</label>
            <input asp-for="PreferredDeliveryDate" type="date" class="form-control" id="PreferredDeliveryDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <small class="form-text text-muted">Select your preferred delivery date. Cannot be in the past.</small>
        </div>

        <div class="form-group mb-3">
            <label>Notes</label>
            <textarea asp-for="Notes" placeholder="Enter any notes here..."></textarea>
        </div>

        <button type="submit" class="btn-submit">
            <i class="fas fa-plus-circle"></i> Create Order
        </button>
    </form>

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success">@Model.SuccessMessage</div>
    }
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger">@Model.ErrorMessage</div>
    }
</div>
