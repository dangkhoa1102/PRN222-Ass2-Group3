@page
@model Assignment02.Pages.Orders.OrderListModel
@{
    ViewData["Title"] = "Orders Management";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/orderlist.css" />
}

<div class="container py-4">
    <!-- Header -->
    <div class="orders-header">
        <div>
            <h2>
                <i class="fas fa-shopping-cart"></i>
                Orders Management
            </h2>
            <p class="text-muted small mb-0">Manage and track all customer orders</p>
        </div>
        <a asp-page="/Orders/Create" class="btn btn-gradient">
            <i class="fas fa-plus"></i> New Order
        </a>
    </div>

    <!-- Success Alert -->
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success">
            <i class="fas fa-check-circle"></i>
            @Model.SuccessMessage
        </div>
    }

    <!-- Error Alert -->
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-triangle"></i>
            @Model.ErrorMessage
        </div>
    }

    <!-- Filter Card -->
    <div class="filter-card">
        <form method="get" id="filterForm" class="row g-3 align-items-end">
            <div class="col-md-4">
                <label class="form-label fw-semibold">Search</label>
                <input asp-for="SearchKeyword"
                       class="form-control"
                       placeholder="Order number, customer, phone..." />
            </div>
            <div class="col-md-3">
                <label class="form-label fw-semibold">Status</label>
                <select asp-for="StatusFilter" class="form-select">
                    <option value="">All Status</option>
                    <option value="confirmed">Confirmed</option>
                    <option value="delivering">Delivering</option>
                    <option value="completed">Completed</option>
                    <option value="cancelled">Cancelled</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label fw-semibold">Payment</label>
                <select asp-for="PaymentStatusFilter" class="form-select">
                    <option value="All">All Payment Status</option>
                    <option value="Paid">Paid</option>
                    <option value="Unpaid">Unpaid</option>
                </select>
            </div>
            <div class="col-md-2 d-flex gap-2">
                <button type="submit" class="btn btn-gradient flex-fill" id="applyBtn">
                    <i class="fas fa-filter"></i> Apply
                </button>
                <button type="button" class="btn btn-outline-secondary flex-fill" id="resetBtn">
                    <i class="fas fa-rotate-right"></i> Reset
                </button>
            </div>
        </form>
    </div>

    <!-- Orders Table -->
    <div class="table-card">
        <div class="table-responsive">
            <table class="table align-middle mb-0">
                <thead>
                    <tr>
                        <th>Order No.</th>
                        <th>Customer</th>
                        <th>Vehicle</th>
                        <th class="text-end">Total</th>
                        <th class="text-center">Status</th>
                        <th class="text-center">Payment</th>
                        <th class="text-center">Created</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!Model.Orders.Any())
                    {
                        <tr>
                            <td colspan="8" class="text-center text-muted py-5">
                                <i class="fas fa-box-open fa-3x mb-3 d-block opacity-50"></i>
                                <p class="mb-0">No orders found</p>
                            </td>
                        </tr>
                    }
                    else
                    {
                        foreach (var order in Model.Orders)
                        {
                            <tr>
                                <td>
                                    <span class="fw-semibold">@order.OrderNumber</span>
                                </td>
                                <td>
                                    <div class="fw-semibold">@(order.Customer?.FullName ?? "N/A")</div>
                                    <div class="small text-muted">@(order.Customer?.Phone ?? "-")</div>
                                </td>
                                <td>
                                    <div class="fw-semibold">@(order.Vehicle?.Model ?? "N/A")</div>
                                    <div class="small text-muted">@(order.Vehicle?.Brand ?? "-")</div>
                                </td>
                                <td class="text-end">
                                    <span class="fw-bold">
                                        @string.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:C0}", order.TotalAmount)
                                    </span>
                                </td>
                                <td class="text-center">
                                    <span class="status-badge @Assignment02.Pages.Orders.OrderListModel.GetStatusBadgeClass(order.Status)">
                                        @Assignment02.Pages.Orders.OrderListModel.GetStatusDisplay(order.Status)
                                    </span>
                                </td>
                                <td class="text-center">
                                    <span class="badge-payment @(order.PaymentStatus?.ToLower() == "paid" ? "paid" : "unpaid")">
                                        @(order.PaymentStatus ?? "Unknown")
                                    </span>
                                </td>
                                <td class="text-center">
                                    <div class="fw-semibold">@(order.CreatedAt?.ToString("dd/MM/yyyy") ?? "-")</div>
                                    <small class="text-muted">@(order.CreatedAt?.ToString("HH:mm") ?? "")</small>
                                </td>
                                <td class="text-center">
                                    <div class="action-buttons">
                                        <a asp-page="/Orders/Details"
                                           asp-route-id="@order.Id"
                                           class="btn-action view"
                                           title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-page="/Orders/Edit"
                                           asp-route-id="@order.Id"
                                           class="btn-action edit"
                                           title="Edit Order">
                                            <i class="fas fa-pen"></i>
                                        </a>
                                        @* <button type="button"
                                                class="btn-action update"
                                                data-bs-toggle="modal"
                                                data-bs-target="#updateStatusModal"
                                                data-order-id="@order.Id"
                                                data-order-status="@order.Status"
                                                title="Update Status">
                                            <i class="fas fa-rotate"></i>
                                        </button> *@
                                        <form method="post"
                                              asp-page-handler="Delete"
                                              class="d-inline"
                                              onsubmit="return confirm('Are you sure you want to delete this order?');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@order.Id" />
                                            <button type="submit"
                                                    class="btn-action delete"
                                                    title="Delete Order">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<div class="modal fade" id="updateStatusModal" tabindex="-1" aria-labelledby="updateStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <div class="modal-content">
            <form method="post" asp-page-handler="UpdateStatus">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h6 class="modal-title fw-bold" id="updateStatusModalLabel">
                        <i class="fas fa-rotate me-2"></i>Update Status
                    </h6>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="updateOrderId" name="id" />

                    <div class="mb-0">
                        <label for="updateStatusSelect" class="form-label small">Status</label>
                        <select id="updateStatusSelect"
                                name="status"
                                class="form-select"
                                required>
                            <option value="confirmed">Confirmed</option>
                            <option value="delivering">Delivering</option>
                            <option value="completed">Completed</option>
                            <option value="cancelled">Cancelled</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-gradient btn-sm">
                        <i class="fas fa-check me-1"></i>Update
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
       
        // document.querySelectorAll('[data-bs-target="#updateStatusModal"]').forEach(button => {
        //     button.addEventListener('click', function () {
        //         const orderId = this.getAttribute('data-order-id');
        //         const currentStatus = this.getAttribute('data-order-status');

               
        //         document.getElementById('updateOrderId').value = orderId;

                
        //         const statusSelect = document.getElementById('updateStatusSelect');
        //         if (statusSelect && currentStatus) {
        //             for (let i = 0; i < statusSelect.options.length; i++) {
        //                 statusSelect.options[i].selected =
        //                     statusSelect.options[i].value.toLowerCase() === currentStatus.toLowerCase();
        //             }
        //         }
        //     });
        // });

       
        document.getElementById("resetBtn").addEventListener("click", function () {
            const form = document.getElementById("filterForm");
            form.reset(); 

           
            form.querySelector('[name="SearchKeyword"]').value = '';
            form.querySelector('[name="StatusFilter"]').selectedIndex = 0;
            form.querySelector('[name="PaymentStatusFilter"]').selectedIndex = 0;

            form.submit(); 
        });

       
        (function () {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    alert.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                    alert.style.opacity = '0';
                    alert.style.transform = 'translateX(-20px)';
                    setTimeout(() => alert.remove(), 500);
                }, 5000);
            });
        })();

       
        function confirmDelete(orderNumber) {
            return confirm(`Are you sure you want to delete order ${orderNumber}?\n\nThis action cannot be undone.`);
        }
    </script>
}
