@page
@model Assignment02.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Create new order";
}

<div class="container py-4">
    <div class="page-header">
        <a asp-page="./Index" class="back-btn">
            <i class="bi bi-arrow-left"></i> Back
        </a>
        <div class="page-title">
            <i class="bi bi-plus-circle-fill"></i>
            <span>Create New Order</span>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill"></i>
            <strong>Error!</strong> @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <form method="post" id="orderForm">
        <div class="form-grid">
            <!-- Customer Information Card -->
            <div class="card">
                <div class="card-header">
                    <i class="bi bi-person-circle"></i>
                    <h3>Customer Information</h3>
                </div>

                <input type="hidden" asp-for="Input.CustomerId" id="customerId" />

                <div class="form-group">
                    <label asp-for="Input.CustomerPhone" class="form-label">
                        Telephone Number <span class="required">*</span>
                    </label>
                    <input asp-for="Input.CustomerPhone" id="customerPhone" class="form-input"
                           placeholder="0xxxxxxxxx" maxlength="11" />
                    <span class="form-hint">Enter phone number to check existing customer</span>
                    <span asp-validation-for="Input.CustomerPhone" class="text-danger small"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Input.CustomerName" class="form-label">
                        Customer Name <span class="required">*</span>
                    </label>
                    <input asp-for="Input.CustomerName" id="customerName" class="form-input"
                           placeholder="Nguyễn Văn A" />
                    <span asp-validation-for="Input.CustomerName" class="text-danger small"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Input.CustomerEmail" class="form-label">Email</label>
                    <input asp-for="Input.CustomerEmail" id="customerEmail" type="email" class="form-input"
                           placeholder="example@gmail.com" />
                </div>

                <div id="customerExistInfo" class="alert alert-info d-none">
                    <i class="bi bi-info-circle-fill"></i>
                    <strong>Existing Customer!</strong> Information has been automatically filled.
                </div>

                <div id="customerNewInfo" class="alert alert-success d-none">
                    <i class="bi bi-person-plus-fill"></i>
                    <strong>New Customer!</strong> Account will be created automatically when saving order.
                </div>
            </div>

            <!-- Order Information Card -->
            <div class="card">
                <div class="card-header">
                    <i class="bi bi-cart-check"></i>
                    <h3>Order Information</h3>
                </div>

                <div class="form-group">
                    <label asp-for="Input.VehicleId" class="form-label">
                        Select Vehicle <span class="required">*</span>
                    </label>
                    <select asp-for="Input.VehicleId" id="vehicleSelect" class="form-input" required>
                        <option value="">-- Select Vehicle --</option>
                        @foreach (var vehicle in Model.AvailableVehicles)
                        {
                            <option value="@vehicle.Id"
                                    data-price="@vehicle.Price"
                                    data-stock="@vehicle.StockQuantity">
                                @vehicle.Brand @vehicle.Model - @vehicle.Price.ToString("N0") VNĐ (Stock: @vehicle.StockQuantity)
                            </option>
                        }
                    </select>
                    <span asp-validation-for="Input.VehicleId" class="text-danger small"></span>
                </div>

                <div id="vehicleInfo" class="vehicle-info d-none">
                    <div class="vehicle-stats">
                        <div class="vehicle-stat">
                            <span class="vehicle-stat-label">Unit Price</span>
                            <div class="vehicle-stat-value" id="vehiclePrice">0 VNĐ</div>
                        </div>
                        <div class="vehicle-stat">
                            <span class="vehicle-stat-label">Available Stock</span>
                            <div class="vehicle-stat-value" id="vehicleStock">0</div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="form-label">
                        Payment Status <span class="required">*</span>
                    </label>
                    <div class="payment-toggle">
                        <input type="radio" class="payment-option" asp-for="Input.PaymentStatus"
                               value="Unpaid" id="paymentUnpaid" autocomplete="off" checked>
                        <label class="payment-label" for="paymentUnpaid">
                            <i class="bi bi-clock"></i> Unpaid
                        </label>

                        <input type="radio" class="payment-option" asp-for="Input.PaymentStatus"
                               value="Paid" id="paymentPaid" autocomplete="off">
                        <label class="payment-label" for="paymentPaid">
                            <i class="bi bi-check-circle"></i> Paid
                        </label>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="Input.Notes" class="form-label">Notes</label>
                    <textarea asp-for="Input.Notes" class="form-input" rows="3"
                              placeholder="Delivery address, special requests..."></textarea>
                </div>

                <div class="total-box">
                    <div class="total-label">TOTAL AMOUNT</div>
                    <div class="total-amount" id="totalAmountDisplay">0 VNĐ</div>
                    <input type="hidden" asp-for="Input.TotalAmount" id="totalAmountInput" value="0" />
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="form-actions">
            <a asp-page="./Index" class="btn btn-cancel">
                <i class="bi bi-x-circle"></i> Cancel
            </a>
            <button type="submit" id="submitBtn" class="btn btn-primary">
                <i class="bi bi-check-circle-fill"></i> Save Order
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let searchTimeout = null;

            // ==================== AUTO SEARCH CUSTOMER BY PHONE ====================
            const phoneInput = document.getElementById('customerPhone');
            const customerNameInput = document.getElementById('customerName');
            const customerEmailInput = document.getElementById('customerEmail');
            const customerIdInput = document.getElementById('customerId');
            const existInfoDiv = document.getElementById('customerExistInfo');
            const newInfoDiv = document.getElementById('customerNewInfo');

            phoneInput.addEventListener('input', function() {
                const phone = this.value.trim();

                clearTimeout(searchTimeout);

                existInfoDiv.classList.add('d-none');
                newInfoDiv.classList.add('d-none');

                customerNameInput.readOnly = false;
                customerEmailInput.readOnly = false;

                if (phone.length >= 10 && /^0\d{9,10}$/.test(phone)) {
                    searchTimeout = setTimeout(() => {
                        searchCustomerByPhone(phone);
                    }, 500);
                } else {
                    customerIdInput.value = '';
                    customerNameInput.value = '';
                    customerEmailInput.value = '';
                }
            });

            function searchCustomerByPhone(phone) {
                fetch(`?handler=SearchCustomers&term=${encodeURIComponent(phone)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.results && data.results.length > 0) {
                            const customer = data.results[0];
                            customerIdInput.value = customer.id;
                            customerNameInput.value = customer.fullName;
                            customerEmailInput.value = customer.email || '';

                            customerNameInput.readOnly = true;
                            customerEmailInput.readOnly = true;

                            existInfoDiv.classList.remove('d-none');
                            newInfoDiv.classList.add('d-none');
                        } else {
                            customerIdInput.value = '';
                            customerNameInput.value = '';
                            customerEmailInput.value = '';
                            customerNameInput.readOnly = false;
                            customerEmailInput.readOnly = false;

                            existInfoDiv.classList.add('d-none');
                            newInfoDiv.classList.remove('d-none');
                        }
                    })
                    .catch(error => {
                        console.error('Search error:', error);
                    });
            }

            // ==================== VEHICLE SELECTION ====================
            const vehicleSelect = document.getElementById('vehicleSelect');
            const vehicleInfoDiv = document.getElementById('vehicleInfo');
            const vehiclePriceDiv = document.getElementById('vehiclePrice');
            const vehicleStockDiv = document.getElementById('vehicleStock');
            const totalAmountDisplay = document.getElementById('totalAmountDisplay');
            const totalAmountInput = document.getElementById('totalAmountInput');

            vehicleSelect.addEventListener('change', function () {
                const selectedOption = this.options[this.selectedIndex];
                const price = parseFloat(selectedOption.getAttribute('data-price')) || 0;
                const stock = parseInt(selectedOption.getAttribute('data-stock')) || 0;

                if (this.value) {
                    const formatter = new Intl.NumberFormat('vi-VN', {
                        style: 'currency',
                        currency: 'VND'
                    });

                    vehiclePriceDiv.textContent = formatter.format(price);
                    vehicleStockDiv.textContent = stock;
                    totalAmountDisplay.textContent = formatter.format(price);
                    totalAmountInput.value = price;
                    vehicleInfoDiv.classList.remove('d-none');

                    if (stock <= 0) {
                        alert('⚠️ This vehicle is out of stock! Please select another one.');
                        this.value = '';
                        vehicleInfoDiv.classList.add('d-none');
                        totalAmountDisplay.textContent = '0 VNĐ';
                        totalAmountInput.value = 0;
                    }
                } else {
                    vehiclePriceDiv.textContent = '0 VNĐ';
                    vehicleStockDiv.textContent = '0';
                    totalAmountDisplay.textContent = '0 VNĐ';
                    totalAmountInput.value = 0;
                    vehicleInfoDiv.classList.add('d-none');
                }
            });

            // ==================== FORM VALIDATION ====================
            const form = document.getElementById('orderForm');
            const submitBtn = document.getElementById('submitBtn');

            form.addEventListener('submit', function (e) {
                const phone = phoneInput.value.trim();
                const customerName = customerNameInput.value.trim();
                const vehicleId = vehicleSelect.value;
                const totalAmount = parseFloat(totalAmountInput.value);

                let errors = [];

                if (!phone) {
                    errors.push('Please enter phone number');
                } else if (!/^0\d{9,10}$/.test(phone)) {
                    errors.push('Phone number must start with 0 and have 10-11 digits');
                }

                if (!customerName) {
                    errors.push('Please enter customer name');
                } else if (customerName.length < 2 || customerName.length > 100) {
                    errors.push('Customer name must be 2-100 characters');
                }

                if (!vehicleId) {
                    errors.push('Please select a vehicle');
                }

                if (totalAmount <= 0) {
                    errors.push('Total amount must be greater than 0');
                }

                if (errors.length > 0) {
                    e.preventDefault();
                    alert('❌ Please fix the following errors:\n\n• ' + errors.join('\n• '));
                    return false;
                }

                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Processing...';
            });
        });
    </script>
}

@section Styles {
    <link href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Plus Jakarta Sans', -apple-system, BlinkMacSystemFont, sans-serif;
            background: #f8f9fd;
            min-height: 100vh;
            color: #1e293b;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2.5rem 2rem;
        }

        /* Page Header */
        .page-header {
            margin-bottom: 2rem;
        }

        .back-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            color: #64748b;
            text-decoration: none;
            font-weight: 600;
            font-size: 0.9rem;
            margin-bottom: 1rem;
            transition: all 0.3s;
        }

            .back-btn:hover {
                color: #667eea;
                transform: translateX(-4px);
            }

        .page-title {
            display: flex;
            align-items: center;
            gap: 1rem;
            font-size: 2rem;
            font-weight: 800;
            color: #1e293b;
        }

            .page-title i {
                width: 56px;
                height: 56px;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                border-radius: 16px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 1.5rem;
            }

        /* Form Layout */
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        /* Card Styling */
        .card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
            border: 1px solid #e2e8f0;
            height: fit-content;
        }

        .card-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1.75rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #f1f5f9;
        }

            .card-header i {
                width: 40px;
                height: 40px;
                background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
                color: #0284c7;
                border-radius: 12px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 1.25rem;
            }

            .card-header h3 {
                font-size: 1.125rem;
                font-weight: 700;
                color: #1e293b;
            }

        /* Form Elements */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: #334155;
            font-size: 0.875rem;
            margin-bottom: 0.5rem;
        }

        .required {
            color: #ef4444;
        }

        .form-input {
            width: 100%;
            padding: 0.875rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            font-size: 0.9375rem;
            font-weight: 500;
            color: #1e293b;
            background: #ffffff;
            transition: all 0.3s;
        }

            .form-input:focus {
                outline: none;
                border-color: #667eea;
                background: #fafbff;
                box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            }

            .form-input:read-only {
                background: #f8fafc;
                color: #64748b;
                cursor: not-allowed;
            }

        .form-hint {
            display: block;
            font-size: 0.813rem;
            color: #64748b;
            margin-top: 0.5rem;
        }

        /* Select Styling */
        select.form-input {
            cursor: pointer;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23475569' viewBox='0 0 16 16'%3E%3Cpath d='M8 11L3 6h10l-5 5z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 1rem center;
            padding-right: 3rem;
        }

        textarea.form-input {
            resize: vertical;
            min-height: 100px;
            font-family: inherit;
        }

        /* Alerts */
        .alert {
            padding: 0.875rem 1rem;
            border-radius: 12px;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-size: 0.875rem;
            font-weight: 500;
            margin-top: 1rem;
        }

        .alert-info {
            background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
            color: #1e40af;
            border-left: 4px solid #3b82f6;
        }

        .alert-success {
            background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
            color: #065f46;
            border-left: 4px solid #10b981;
        }

        .alert-danger {
            background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
            color: #991b1b;
            border-left: 4px solid #ef4444;
        }

        /* Vehicle Info Box */
        .vehicle-info {
            background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
            border: 2px solid #10b981;
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .vehicle-stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
        }

        .vehicle-stat {
            text-align: center;
        }

        .vehicle-stat-label {
            display: block;
            font-size: 0.813rem;
            color: #065f46;
            font-weight: 600;
            margin-bottom: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .vehicle-stat-value {
            font-size: 1.5rem;
            font-weight: 800;
            color: #059669;
        }

        /* Payment Toggle */
        .payment-toggle {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0.75rem;
        }

        .payment-option {
            display: none;
        }

        .payment-label {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.875rem 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 12px;
            font-weight: 600;
            font-size: 0.9rem;
            color: #64748b;
            cursor: pointer;
            transition: all 0.3s;
        }

        .payment-option:checked + .payment-label {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-color: #667eea;
            color: white;
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        .payment-label:hover {
            border-color: #cbd5e1;
        }

        /* Total Amount */
        .total-box {
            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
            border-radius: 16px;
            padding: 2rem;
            text-align: center;
            margin-top: 1.5rem;
        }

        .total-label {
            font-size: 0.75rem;
            font-weight: 700;
            color: rgba(255, 255, 255, 0.6);
            letter-spacing: 0.15em;
            margin-bottom: 0.5rem;
        }

        .total-amount {
            font-size: 2.5rem;
            font-weight: 800;
            color: #10b981;
            text-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);
        }

        /* Action Buttons */
        .form-actions {
            padding-top: 2rem;
            border-top: 2px solid #f1f5f9;
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
        }

        .btn {
            padding: 0.875rem 2rem;
            border-radius: 12px;
            font-weight: 700;
            font-size: 0.9375rem;
            cursor: pointer;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            border: none;
            text-decoration: none;
        }

        .btn-cancel {
            background: #f8fafc;
            color: #64748b;
            border: 2px solid #e2e8f0;
        }

            .btn-cancel:hover {
                background: #f1f5f9;
                border-color: #cbd5e1;
                transform: translateY(-2px);
            }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.35);
        }

            .btn-primary:hover:not(:disabled) {
                transform: translateY(-2px);
                box-shadow: 0 12px 28px rgba(102, 126, 234, 0.45);
            }

            .btn-primary:disabled {
                opacity: 0.6;
                cursor: not-allowed;
            }

        /* Hide footer */
        footer {
            display: none !important;
        }

        /* Responsive */
        @@media (max-width: 1024px) {
            .form-grid

        {
            grid-template-columns: 1fr;
        }

        }

        @@media (max-width: 640px) {
            .container

        {
            padding: 1.5rem 1rem;
        }

        .card {
            padding: 1.5rem;
        }

        .page-title {
            font-size: 1.5rem;
        }

        .form-actions {
            flex-direction: column-reverse;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }

        }
    </style>
}