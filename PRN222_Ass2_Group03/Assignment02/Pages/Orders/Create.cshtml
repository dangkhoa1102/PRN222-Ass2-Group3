@page
@model Assignment02.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Tạo đơn hàng mới";
}

<div class="container-fluid py-4">
    <div class="card shadow-lg border-0 rounded-4 mx-auto" style="max-width: 1200px;">
        <!-- Header -->
        <div class="card-header bg-gradient text-white rounded-top-4 p-4">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="mb-0 fw-bold d-flex align-items-center">
                    <i class="bi bi-plus-circle-fill me-2"></i>Tạo đơn hàng mới
                </h4>
                <a asp-page="./Index" class="btn btn-light btn-sm shadow-sm px-3">
                    <i class="bi bi-arrow-left me-1"></i>Quay lại
                </a>
            </div>
        </div>

        <div class="card-body p-4 p-lg-5">
            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger mb-4">
                    <i class="bi bi-exclamation-triangle me-2"></i>@Model.ErrorMessage
                </div>
            }

            <form method="post" id="orderForm">
                <div class="row g-4">
                    <!-- Thông tin khách hàng -->
                    <div class="col-lg-6">
                        <div class="form-section p-4 h-100">
                            <h5 class="fw-bold mb-4 text-primary border-bottom pb-2">
                                <i class="bi bi-person-circle me-2"></i>Thông tin khách hàng
                            </h5>

                            <input type="hidden" asp-for="Input.CustomerId" id="customerId" />

                            <!-- Số điện thoại - Nhập trước để tìm khách -->
                            <div class="mb-3">
                                <label asp-for="Input.CustomerPhone" class="form-label">
                                    Số điện thoại <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Input.CustomerPhone"
                                       id="customerPhone"
                                       class="form-control"
                                       placeholder="0xxxxxxxxx"
                                       maxlength="11" />
                                <small class="form-text text-muted">Nhập SĐT để kiểm tra khách hàng</small>
                                <span asp-validation-for="Input.CustomerPhone" class="text-danger small"></span>
                            </div>

                            <!-- Tên khách hàng -->
                            <div class="mb-3">
                                <label asp-for="Input.CustomerName" class="form-label">
                                    Tên khách hàng <span class="text-danger">*</span>
                                </label>
                                <input asp-for="Input.CustomerName"
                                       id="customerName"
                                       class="form-control"
                                       placeholder="Nguyễn Văn A" />
                                <span asp-validation-for="Input.CustomerName" class="text-danger small"></span>
                            </div>

                            <!-- Email -->
                            <div class="mb-3">
                                <label asp-for="Input.CustomerEmail" class="form-label">Email</label>
                                <input asp-for="Input.CustomerEmail"
                                       id="customerEmail"
                                       type="email"
                                       class="form-control"
                                       placeholder="example@gmail.com" />
                            </div>

                            <!-- Thông báo khách hàng tồn tại -->
                            <div id="customerExistInfo" class="alert alert-info d-none py-2 small">
                                <i class="bi bi-info-circle me-2"></i>
                                <strong>Khách hàng đã tồn tại!</strong> Thông tin đã được tự động điền.
                            </div>

                            <!-- Thông báo khách hàng mới -->
                            <div id="customerNewInfo" class="alert alert-success d-none py-2 small">
                                <i class="bi bi-person-plus me-2"></i>
                                <strong>Khách hàng mới!</strong> Sẽ tự động tạo tài khoản khi lưu đơn.
                            </div>
                        </div>
                    </div>

                    <!-- Thông tin đơn hàng -->
                    <div class="col-lg-6">
                        <div class="form-section p-4 h-100 d-flex flex-column">
                            <h5 class="fw-bold mb-4 text-success border-bottom pb-2">
                                <i class="bi bi-cart-check me-2"></i>Thông tin đơn hàng
                            </h5>

                            <!-- Chọn xe -->
                            <div class="mb-3">
                                <label asp-for="Input.VehicleId" class="form-label">
                                    Chọn loại xe <span class="text-danger">*</span>
                                </label>
                                <select asp-for="Input.VehicleId" id="vehicleSelect" class="form-select" required>
                                    <option value="">-- Chọn xe --</option>
                                    @foreach (var vehicle in Model.AvailableVehicles)
                                    {
                                        <option value="@vehicle.Id"
                                                data-price="@vehicle.Price"
                                                data-stock="@vehicle.StockQuantity">
                                            @vehicle.Brand @vehicle.Model - @vehicle.Price.ToString("N0") VNĐ (Còn: @vehicle.StockQuantity)
                                        </option>
                                    }
                                </select>
                                <span asp-validation-for="Input.VehicleId" class="text-danger small"></span>
                            </div>

                            <!-- Thông tin xe -->
                            <div id="vehicleInfo" class="card vehicle-info-card mb-3 d-none">
                                <div class="card-body">
                                    <div class="row text-center align-items-center">
                                        <div class="col-6 border-end">
                                            <small class="text-muted d-block">Đơn giá</small>
                                            <div id="vehiclePrice" class="fw-bold text-success">0 VNĐ</div>
                                        </div>
                                        <div class="col-6">
                                            <small class="text-muted d-block">Số lượng còn</small>
                                            <div id="vehicleStock" class="fw-bold">0</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Trạng thái thanh toán -->
                            <div class="mb-3">
                                <label class="form-label">Trạng thái thanh toán <span class="text-danger">*</span></label>
                                <div class="btn-group w-100" role="group">
                                    <input type="radio" class="btn-check" asp-for="Input.PaymentStatus"
                                           value="Chưa thanh toán" id="paymentPending" autocomplete="off" checked>
                                    <label class="btn btn-outline-secondary" for="paymentPending">
                                        <i class="bi bi-clock me-2"></i>Chưa thanh toán
                                    </label>

                                    <input type="radio" class="btn-check" asp-for="Input.PaymentStatus"
                                           value="Đã thanh toán" id="paymentPaid" autocomplete="off">
                                    <label class="btn btn-outline-secondary" for="paymentPaid">
                                        <i class="bi bi-check-circle me-2"></i>Đã thanh toán
                                    </label>
                                </div>
                            </div>

                            <!-- Ghi chú -->
                            <div class="mb-3">
                                <label asp-for="Input.Notes" class="form-label">Ghi chú</label>
                                <textarea asp-for="Input.Notes" class="form-control" rows="2"
                                          placeholder="Địa chỉ giao xe, yêu cầu đặc biệt..."></textarea>
                            </div>

                            <!-- Tổng tiền -->
                            <div class="total-amount-box mt-auto">
                                <h6 class="fw-light text-white-50 mb-0">TỔNG TIỀN THANH TOÁN</h6>
                                <h2 id="totalAmountDisplay" class="fw-bold mb-0">0 VNĐ</h2>
                                <input type="hidden" asp-for="Input.TotalAmount" id="totalAmountInput" value="0" />
                            </div>
                        </div>
                    </div>
                </div>

                <hr class="my-4">

                <!-- Buttons -->
                <div class="d-flex justify-content-end align-items-center">
                    <a asp-page="./Index" class="btn btn-secondary me-3">
                        <i class="bi bi-x-lg me-1"></i> Hủy
                    </a>
                    <button type="submit" id="submitBtn" class="btn btn-primary btn-lg shadow">
                        <i class="bi bi-check-circle-fill me-2"></i> Lưu đơn hàng
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let searchTimeout = null;

            // ==================== TỰ ĐỘNG TÌM KHÁCH HÀNG KHI NHẬP SĐT ====================
            const phoneInput = document.getElementById('customerPhone');
            const customerNameInput = document.getElementById('customerName');
            const customerEmailInput = document.getElementById('customerEmail');
            const customerIdInput = document.getElementById('customerId');
            const existInfoDiv = document.getElementById('customerExistInfo');
            const newInfoDiv = document.getElementById('customerNewInfo');

            phoneInput.addEventListener('input', function() {
                const phone = this.value.trim();

                // Clear timeout cũ
                clearTimeout(searchTimeout);

                // Ẩn thông báo
                existInfoDiv.classList.add('d-none');
                newInfoDiv.classList.add('d-none');

                // Reset readonly
                customerNameInput.readOnly = false;
                customerEmailInput.readOnly = false;

                // Nếu SĐT hợp lệ (10-11 số)
                if (phone.length >= 10 && /^0\d{9,10}$/.test(phone)) {
                    // Debounce 500ms
                    searchTimeout = setTimeout(() => {
                        searchCustomerByPhone(phone);
                    }, 500);
                } else {
                    // Reset nếu SĐT chưa đủ
                    customerIdInput.value = '';
                    customerNameInput.value = '';
                    customerEmailInput.value = '';
                }
            });

            // Hàm tìm kiếm khách hàng theo SĐT
            function searchCustomerByPhone(phone) {
                fetch(`?handler=SearchCustomers&term=${encodeURIComponent(phone)}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.results && data.results.length > 0) {
                            // KHÁCH HÀNG ĐÃ TỒN TẠI
                            const customer = data.results[0];
                            customerIdInput.value = customer.id;
                            customerNameInput.value = customer.fullName;
                            customerEmailInput.value = customer.email || '';

                            // Readonly để không sửa
                            customerNameInput.readOnly = true;
                            customerEmailInput.readOnly = true;

                            // Hiển thị thông báo
                            existInfoDiv.classList.remove('d-none');
                            newInfoDiv.classList.add('d-none');
                        } else {
                            // KHÁCH HÀNG MỚI
                            customerIdInput.value = '';
                            customerNameInput.value = '';
                            customerEmailInput.value = '';
                            customerNameInput.readOnly = false;
                            customerEmailInput.readOnly = false;

                            // Hiển thị thông báo khách mới
                            existInfoDiv.classList.add('d-none');
                            newInfoDiv.classList.remove('d-none');
                        }
                    })
                    .catch(error => {
                        console.error('Lỗi tìm kiếm:', error);
                    });
            }

            // ==================== XỬ LÝ CHỌN XE ====================
            const vehicleSelect = document.getElementById('vehicleSelect');
            const vehicleInfoDiv = document.getElementById('vehicleInfo');
            const vehiclePriceDiv = document.getElementById('vehiclePrice');
            const vehicleStockDiv = document.getElementById('vehicleStock');
            const totalAmountDisplay = document.getElementById('totalAmountDisplay');
            const totalAmountInput = document.getElementById('totalAmountInput');

            vehicleSelect.addEventListener('change', function () {
                const selectedOption = this.options[this.selectedIndex];
                const price = parseFloat(selectedOption.getAttribute('data-price')) || 0;
                const stock = parseInt(selectedOption.getAttribute('data-stock')) || 0;

                if (this.value) {
                    const formatter = new Intl.NumberFormat('vi-VN', {
                        style: 'currency',
                        currency: 'VND'
                    });

                    // Hiển thị thông tin xe
                    vehiclePriceDiv.textContent = formatter.format(price);
                    vehicleStockDiv.textContent = stock;
                    totalAmountDisplay.textContent = formatter.format(price);
                    totalAmountInput.value = price;
                    vehicleInfoDiv.classList.remove('d-none');

                    // Kiểm tra hết hàng
                    if (stock <= 0) {
                        alert('⚠️ Xe này đã hết hàng! Vui lòng chọn xe khác.');
                        this.value = '';
                        vehicleInfoDiv.classList.add('d-none');
                        totalAmountDisplay.textContent = '0 VNĐ';
                        totalAmountInput.value = 0;
                    }
                } else {
                    // Reset
                    vehiclePriceDiv.textContent = '0 VNĐ';
                    vehicleStockDiv.textContent = '0';
                    totalAmountDisplay.textContent = '0 VNĐ';
                    totalAmountInput.value = 0;
                    vehicleInfoDiv.classList.add('d-none');
                }
            });

            // ==================== VALIDATION FORM ====================
            const form = document.getElementById('orderForm');
            const submitBtn = document.getElementById('submitBtn');

            form.addEventListener('submit', function (e) {
                const phone = phoneInput.value.trim();
                const customerName = customerNameInput.value.trim();
                const vehicleId = vehicleSelect.value;
                const totalAmount = parseFloat(totalAmountInput.value);

                let errors = [];

                // Validate SĐT
                if (!phone) {
                    errors.push('Vui lòng nhập số điện thoại');
                } else if (!/^0\d{9,10}$/.test(phone)) {
                    errors.push('Số điện thoại phải bắt đầu bằng 0 và có 10-11 chữ số');
                }

                // Validate tên khách hàng
                if (!customerName) {
                    errors.push('Vui lòng nhập tên khách hàng');
                } else if (customerName.length < 2 || customerName.length > 100) {
                    errors.push('Tên khách hàng phải từ 2-100 ký tự');
                }

                // Validate xe
                if (!vehicleId) {
                    errors.push('Vui lòng chọn loại xe');
                }

                // Validate tổng tiền
                if (totalAmount <= 0) {
                    errors.push('Tổng tiền phải lớn hơn 0');
                }

                if (errors.length > 0) {
                    e.preventDefault();
                    alert('❌ Lỗi:\n\n• ' + errors.join('\n• '));
                    return false;
                }

                // Disable nút submit
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Đang xử lý...';
            });
        });
    </script>
}

@section Styles {
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

    <style>
        :root {
            --primary-color: #667eea;
            --primary-dark: #5568d3;
            --secondary-color: #f093fb;
            --success-color: #10b981;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --text-muted: #94a3b8;
            --bg-secondary: #f8fafc;
            --border-color: #e2e8f0;
            --border-light: #f1f5f9;
            --border-radius-sm: 8px;
            --border-radius-md: 12px;
            --border-radius-lg: 16px;
            --border-radius-xl: 20px;
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
            --shadow-2xl: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            --transition-base: 250ms cubic-bezier(0.4, 0, 0.2, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Be Vietnam Pro', system-ui, -apple-system, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 2rem 0;
            color: var(--text-primary);
        }

        .card.shadow-lg {
            background: white;
            border: none;
            border-radius: var(--border-radius-xl);
            box-shadow: var(--shadow-2xl);
            animation: cardFadeIn 0.6s ease-out;
        }

        @@keyframes cardFadeIn {
            from

        {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .card-header.bg-gradient {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%) !important;
            padding: 2rem 2.5rem !important;
            border: none;
        }

        .card-header h4 {
            color: white;
            font-weight: 700;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .card-header .btn-light {
            background: rgba(255, 255, 255, 0.95);
            border: none;
            color: var(--primary-color);
            font-weight: 600;
            transition: var(--transition-base);
        }

            .card-header .btn-light:hover {
                background: white;
                transform: translateY(-2px);
            }

        .form-section {
            background: white;
            border: 2px solid var(--border-light);
            border-radius: var(--border-radius-lg);
            transition: var(--transition-base);
        }

            .form-section:hover {
                border-color: var(--primary-color);
                box-shadow: var(--shadow-lg);
            }

            .form-section h5 {
                color: var(--text-primary);
                font-weight: 700;
                border-bottom: 2px solid var(--border-light);
            }

        .form-label {
            font-weight: 600;
            color: var(--text-secondary);
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .form-control, .form-select {
            background: var(--bg-secondary);
            border: 2px solid var(--border-color);
            border-radius: var(--border-radius-sm);
            padding: 0.75rem 1rem;
            font-weight: 500;
            transition: var(--transition-base);
        }

            .form-control:focus, .form-select:focus {
                background: white;
                border-color: var(--primary-color);
                box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            }

            .form-control:read-only {
                background-color: #e9ecef;
                cursor: not-allowed;
            }

        .alert {
            border: none;
            border-radius: var(--border-radius-md);
            padding: 0.75rem 1rem;
            font-weight: 500;
        }

        .alert-info {
            background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
            color: #1e40af;
            border-left: 4px solid #3b82f6;
        }

        .alert-success {
            background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
            color: #065f46;
            border-left: 4px solid var(--success-color);
        }

        .alert-danger {
            background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
            color: #dc2626;
            border-left: 4px solid #ef4444;
        }

        .vehicle-info-card {
            background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
            border: 2px dashed var(--success-color);
            border-radius: var(--border-radius-md);
        }

        .total-amount-box {
            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
            color: white;
            text-align: center;
            padding: 2rem;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow-xl);
        }

            .total-amount-box h6 {
                color: rgba(255, 255, 255, 0.7);
                font-size: 0.813rem;
                font-weight: 600;
                letter-spacing: 0.1em;
            }

            .total-amount-box h2 {
                color: var(--success-color);
                font-size: 2.5rem;
                font-weight: 800;
                text-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }

        .btn {
            font-weight: 600;
            border-radius: var(--border-radius-sm);
            padding: 0.75rem 1.75rem;
            transition: var(--transition-base);
            border: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(102, 126, 234, 0.5);
            }

            .btn-primary:disabled {
                opacity: 0.6;
                cursor: not-allowed;
            }

        .btn-secondary {
            background: var(--bg-secondary);
            color: var(--text-secondary);
            border: 2px solid var(--border-color);
        }

        .btn-check:checked + .btn-outline-secondary {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%) !important;
            border-color: var(--primary-color) !important;
            color: white !important;
        }

        @@media (max-width: 991px) {
            body

        {
            padding: 1rem 0;
        }

        .card-body {
            padding: 1.5rem !important;
        }

        }
    </style>
}