@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Assignment02.Pages.Admin.ManageOrdersModel
@{
    ViewData["Title"] = "Manage Orders";
}

@section Styles {
<style>
    body {
        background: linear-gradient(135deg, #2196F3 0%, #4CAF50 100%);
        min-height: 100vh;
        margin: 0;
        font-family: 'Inter', 'Segoe UI', sans-serif;
    }

    .manage-orders-hero {
        background: linear-gradient(135deg, #1976D2 0%, #388E3C 100%);
        color: white;
        padding: 80px 0 60px 0;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .manage-orders-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }

    .manage-orders-hero h1 {
        font-size: 3rem;
        font-weight: 800;
        margin: 0 0 1rem 0;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        position: relative;
        z-index: 2;
    }

    .manage-orders-hero p {
        font-size: 1.2rem;
        opacity: 0.9;
        margin: 0;
        position: relative;
        z-index: 2;
    }

    .orders-container {
        max-width: 1400px;
        margin: -40px auto 60px auto;
        background: white;
        border-radius: 24px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        position: relative;
        z-index: 10;
    }

    .orders-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 6px;
        background: linear-gradient(135deg, #2196F3 0%, #4CAF50 100%);
    }

    .orders-header {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        padding: 2rem;
        text-align: center;
        border-bottom: 1px solid #e9ecef;
    }

    .orders-header h2 {
        font-size: 2rem;
        font-weight: 700;
        color: #2c3e50;
        margin: 0 0 0.5rem 0;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;
    }

    .orders-header h2 i {
        color: #2196F3;
        font-size: 1.8rem;
    }

    .orders-header p {
        font-size: 1.1rem;
        color: #6c757d;
        margin: 0;
    }

    .filter-section {
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        padding: 1.5rem 2rem;
        border-bottom: 1px solid #e9ecef;
    }

    .filter-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .filter-title i {
        color: #2196F3;
    }

    .filter-row {
        display: flex;
        gap: 1rem;
        align-items: end;
        flex-wrap: wrap;
    }

    .filter-item {
        flex: 1;
        min-width: 200px;
    }

    .form-group {
        margin-bottom: 0;
    }

    .form-group label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-group label i {
        color: #2196F3;
        width: 16px;
    }

    .form-control {
        border: 2px solid #e9ecef;
        border-radius: 12px;
        padding: 0.75rem 1rem;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        background: white;
    }

    .form-control:focus {
        border-color: #2196F3;
        box-shadow: 0 0 0 0.2rem rgba(33, 150, 243, 0.15);
        outline: none;
    }

    .orders-table-section {
        padding: 2rem;
    }

    .table-wrapper {
        background: white;
        border-radius: 16px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        border: 2px solid #f1f3f4;
    }

    .table {
        margin: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

    .table thead th {
        background: linear-gradient(135deg, #2196F3, #4CAF50);
        color: white;
        border: none;
        font-weight: 600;
        padding: 1.25rem 1rem;
        text-align: center;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        position: sticky;
        top: 0;
        z-index: 10;
    }

    .table tbody td {
        padding: 1rem;
        vertical-align: middle;
        border-top: 1px solid #f1f3f4;
        text-align: center;
        font-size: 0.9rem;
    }

    .table tbody tr {
        transition: all 0.3s ease;
    }

    .table tbody tr:hover {
        background: linear-gradient(135deg, #f8f9fa, #e3f2fd);
        transform: scale(1.01);
    }

    .order-id-cell {
        font-family: 'Courier New', monospace;
        font-weight: 600;
        color: #2196F3;
        background: linear-gradient(135deg, #e3f2fd, #f3e5f5);
        border-radius: 8px;
        padding: 0.5rem;
        display: inline-block;
        min-width: 100px;
    }

    .customer-cell {
        font-weight: 600;
        color: #2c3e50;
    }

    .vehicle-cell {
        color: #4CAF50;
        font-weight: 500;
    }

    .dealer-cell {
        color: #6c757d;
        font-size: 0.85rem;
    }

    .amount-cell {
        font-weight: 700;
        color: #4CAF50;
        font-size: 1rem;
    }

    .date-cell {
        color: #6c757d;
        font-size: 0.85rem;
    }

    .notes-cell {
        max-width: 200px;
        font-size: 0.85rem;
        color: #495057;
    }

    .notes-content {
        display: block;
        cursor: help;
        line-height: 1.3;
        word-wrap: break-word;
    }

    .notes-content:hover {
        color: #007bff;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: inline-block;
        min-width: 80px;
    }

    .status-pending { background: linear-gradient(135deg, #fff3cd, #ffeaa7); color: #856404; }
    .status-confirmed { background: linear-gradient(135deg, #d1ecf1, #bee5eb); color: #0c5460; }
    .status-processing { background: linear-gradient(135deg, #ffeaa7, #fdcb6e); color: #856404; }
    .status-shipped { background: linear-gradient(135deg, #e2e3f0, #d1d7f0); color: #6f42c1; }
    .status-completed { background: linear-gradient(135deg, #d4edda, #c3e6cb); color: #198754; }
    .status-cancelled { background: linear-gradient(135deg, #f8d7da, #f5c6cb); color: #842029; }

    .payment-pending { background: linear-gradient(135deg, #fff3cd, #ffeaa7); color: #856404; }
    .payment-paid { background: linear-gradient(135deg, #d4edda, #c3e6cb); color: #198754; }
    .payment-unpaid { background: linear-gradient(135deg, #f8d7da, #f5c6cb); color: #842029; }
    .payment-refunded { background: linear-gradient(135deg, #e2e3f0, #d1d7f0); color: #6c757d; }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .btn-action {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border: none;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        min-width: 80px;
        justify-content: center;
    }

    .btn-view {
        background: linear-gradient(135deg, #2196F3, #4CAF50);
        color: white;
    }

    .btn-view:hover {
        background: linear-gradient(135deg, #4CAF50, #2196F3);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(33, 150, 243, 0.3);
        color: white;
    }

    .btn-confirm {
        background: linear-gradient(135deg, #4CAF50, #8BC34A);
        color: white;
    }

    .btn-confirm:hover {
        background: linear-gradient(135deg, #8BC34A, #4CAF50);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
    }

    .btn-process {
        background: linear-gradient(135deg, #FF9800, #FFC107);
        color: white;
    }

    .btn-process:hover {
        background: linear-gradient(135deg, #FFC107, #FF9800);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(255, 152, 0, 0.3);
    }

    .btn-ship {
        background: linear-gradient(135deg, #9C27B0, #673AB7);
        color: white;
    }

    .btn-ship:hover {
        background: linear-gradient(135deg, #673AB7, #9C27B0);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(156, 39, 176, 0.3);
    }

    .btn-deliver {
        background: linear-gradient(135deg, #00BCD4, #009688);
        color: white;
    }

    .btn-deliver:hover {
        background: linear-gradient(135deg, #009688, #00BCD4);
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 188, 212, 0.3);
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #6c757d;
    }

    .empty-icon {
        width: 100px;
        height: 100px;
        background: linear-gradient(135deg, #e9ecef, #f8f9fa);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.5rem auto;
        font-size: 2.5rem;
        color: #adb5bd;
    }

    .empty-state h3 {
        font-size: 1.5rem;
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
    }

    .empty-state p {
        font-size: 1rem;
        margin-bottom: 0;
    }

    @@media (max-width: 768px) {
        .manage-orders-hero h1 {
            font-size: 2rem;
        }
        
        .orders-container {
            margin: -20px 10px 40px 10px;
        }
        
        .filter-section,
        .orders-table-section {
            padding: 1rem;
        }
        
        .filter-row {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .filter-item {
            min-width: 100%;
        }
        
        .table-responsive {
            border-radius: 12px;
        }
        
        .action-buttons {
            flex-direction: column;
            gap: 0.25rem;
        }
        
        .btn-action {
            min-width: 60px;
            font-size: 0.7rem;
            padding: 0.4rem 0.8rem;
        }
    }

    @@media (max-width: 576px) {
        .table thead th,
        .table tbody td {
            padding: 0.5rem 0.25rem;
            font-size: 0.8rem;
        }
        
        .status-badge {
            font-size: 0.7rem;
            padding: 0.25rem 0.5rem;
            min-width: 60px;
        }
    }
</style>
}

<!-- Hero Section -->
<div class="manage-orders-hero">
    <div class="container">
        <h1>
            <i class="fas fa-shopping-cart"></i>
            Manage Orders
        </h1>
        <p>Quản lý và theo dõi tất cả đơn hàng của khách hàng</p>
    </div>
</div>

<!-- Main Content -->
<div class="container-fluid">
    <div class="orders-container">
        <div class="orders-header">
            <h2>
                <i class="fas fa-clipboard-list"></i>
                Danh sách đơn hàng
            </h2>
            <p>Quản lý trạng thái và xử lý đơn hàng khách hàng</p>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">
            <div class="filter-title">
                <i class="fas fa-filter"></i>
                Bộ lọc tìm kiếm
            </div>
            <div class="filter-row">
                <div class="filter-item">
                    <div class="form-group">
                        <label for="statusFilter">
                            <i class="fas fa-tags"></i>
                            Trạng thái đơn hàng:
                        </label>
                        <select id="statusFilter" class="form-control" onchange="filterOrders()">
                            <option value="all">Tất cả trạng thái</option>
                            <option value="Pending">Pending</option>
                            <option value="Confirmed">Confirmed</option>
                            <option value="Processing">Processing</option>
                            <option value="Shipped">Shipped</option>
                            <option value="Delivered">Delivered</option>
                            <option value="Cancelled">Cancelled</option>
                            <option value="Completed">Completed</option>
                        </select>
                    </div>
                </div>
                <div class="filter-item">
                    <div class="form-group">
                        <label for="paymentFilter">
                            <i class="fas fa-credit-card"></i>
                            Trạng thái thanh toán:
                        </label>
                        <select id="paymentFilter" class="form-control" onchange="filterOrders()">
                            <option value="all">Tất cả thanh toán</option>
                            <option value="Unpaid">Unpaid</option>
                            <option value="Paid">Paid</option>
                            <option value="Failed">Failed</option>
                            <option value="Refunded">Refunded</option>
                        </select>
                    </div>
                </div>
                <div class="filter-item">
                    <div class="form-group">
                        <label for="dateFrom">
                            <i class="fas fa-calendar-alt"></i>
                            Từ ngày:
                        </label>
                        <input type="date" id="dateFrom" class="form-control" onchange="filterOrders()">
                    </div>
                </div>
                <div class="filter-item">
                    <div class="form-group">
                        <label for="dateTo">
                            <i class="fas fa-calendar-check"></i>
                            Đến ngày:
                        </label>
                        <input type="date" id="dateTo" class="form-control" onchange="filterOrders()">
                    </div>
                </div>
            </div>
        </div>

        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert" style="margin: 1rem 2rem; border-radius: 12px; border: none; background: linear-gradient(135deg, #d4edda, #c3e6cb); color: #198754;">
                <i class="fas fa-check-circle me-2"></i>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert" style="margin: 1rem 2rem; border-radius: 12px; border: none; background: linear-gradient(135deg, #f8d7da, #f5c6cb); color: #842029;">
                <i class="fas fa-exclamation-triangle me-2"></i>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Orders Table -->
        <div class="orders-table-section">
            <div class="table-wrapper">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Customer</th>
                                <th>Vehicle</th>
                                <th>Dealer</th>
                                <th>Status</th>
                                <th>Payment</th>
                                <th>Total Amount</th>
                                <th>Order Date</th>
                                <th>Notes</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Orders.Any())
                            {
                                @foreach (var order in Model.Orders)
                                {
                                    <tr>
                                        <td class="customer-cell">@order.CustomerName</td>
                                        <td class="vehicle-cell">@order.VehicleName</td>
                                        <td class="dealer-cell">@order.DealerName</td>
                                        <td>
                                            <span class="status-badge status-@(order.Status?.ToLower())">
                                                @order.Status
                                            </span>
                                        </td>
                                        <td>
                                            <span class="status-badge payment-@(order.PaymentStatus?.ToLower())">
                                                @order.PaymentStatus
                                            </span>
                                        </td>
                                        <td class="amount-cell">@order.TotalAmount.ToString("N0") ₫</td>
                                        <td class="date-cell">@(order.CreatedAt?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                                        <td class="notes-cell">
                                            @if (!string.IsNullOrEmpty(order.Notes))
                                            {
                                                <span class="notes-content" title="@order.Notes">
                                                    @(order.Notes.Length > 50 ? order.Notes.Substring(0, 50) + "..." : order.Notes)
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">—</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="action-buttons">
                                                <a asp-page="/Orders/Details" asp-route-id="@order.Id" class="btn-action btn-view">
                                                    <i class="fas fa-eye"></i> View
                                                </a>
                                                @if (order.Status == "Pending")
                                                {
                                                    <button class="btn-action btn-confirm" onclick="updateOrderStatus('@order.Id', 'Confirmed')">
                                                        <i class="fas fa-check"></i> Confirm
                                                    </button>
                                                }
                                                @if (order.Status == "Confirmed")
                                                {
                                                    <button class="btn-action btn-process" onclick="updateOrderStatus('@order.Id', 'Processing')">
                                                        <i class="fas fa-cog"></i> Process
                                                    </button>
                                                }
                                                @if (order.Status == "Processing")
                                                {
                                                    <button class="btn-action btn-ship" onclick="updateOrderStatus('@order.Id', 'Shipped')">
                                                        <i class="fas fa-shipping-fast"></i> Ship
                                                    </button>
                                                }
                                                @if (order.Status == "Shipped")
                                                {
                                                    <button class="btn-action btn-ship" onclick="updateOrderStatus('@order.Id', 'Shipped')">
                                                        <i class="fas fa-shipping-fast"></i> Ship
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="9">
                                        <div class="empty-state">
                                            <div class="empty-icon">
                                                <i class="fas fa-shopping-cart"></i>
                                            </div>
                                            <h3>Không có đơn hàng nào</h3>
                                            <p>Hiện tại chưa có đơn hàng nào phù hợp với tiêu chí tìm kiếm</p>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function filterOrders() {
            const status = document.getElementById('statusFilter').value;
            const payment = document.getElementById('paymentFilter').value;
            const dateFrom = document.getElementById('dateFrom').value;
            const dateTo = document.getElementById('dateTo').value;
            
            // Build query string
            const params = new URLSearchParams();
            if (status !== 'all') params.append('status', status);
            if (payment !== 'all') params.append('paymentStatus', payment);
            if (dateFrom) params.append('fromDate', dateFrom);
            if (dateTo) params.append('toDate', dateTo);
            
            // Redirect with filters
            window.location.href = '/Admin/ManageOrders?' + params.toString();
        }

        function updateOrderStatus(orderId, newStatus) {
            if (confirm(`Bạn có chắc chắn muốn cập nhật trạng thái đơn hàng thành ${newStatus}?`)) {
                // Create form and submit
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/Admin/ManageOrders?handler=UpdateStatus';
                
                const orderIdInput = document.createElement('input');
                orderIdInput.type = 'hidden';
                orderIdInput.name = 'orderId';
                orderIdInput.value = orderId;
                
                const statusInput = document.createElement('input');
                statusInput.type = 'hidden';
                statusInput.name = 'newStatus';
                statusInput.value = newStatus;
                
                // Add CSRF token
                const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
                if (tokenInput) {
                    const csrfInput = document.createElement('input');
                    csrfInput.type = 'hidden';
                    csrfInput.name = '__RequestVerificationToken';
                    csrfInput.value = tokenInput.value;
                    form.appendChild(csrfInput);
                }
                
                form.appendChild(orderIdInput);
                form.appendChild(statusInput);
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}
