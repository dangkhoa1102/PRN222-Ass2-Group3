@page
@model Assignment02.Pages.TestDrives.HistoryModel
@{
    ViewData["Title"] = "Lịch sử lái thử xe";
}

<style>
    body {
        background-color: #f4f6f9;
    }

    .orders-container {
        width: 95%;
        margin: 40px auto;
        background: #ffffff;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        padding: 20px 30px;
    }

    h2 {
        font-weight: 700;
        color: #007bff;
        text-align: center;
        margin-bottom: 25px;
    }

    .table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 8px;
    }

        .table thead th {
            background-color: #2c3e50;
            color: white;
            font-weight: 600;
            text-align: center;
            padding: 14px;
            border: none;
        }

        .table tbody tr {
            background: #ffffff;
            border-radius: 10px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
            transition: 0.2s;
        }

            .table tbody tr:hover {
                transform: scale(1.01);
                background-color: #f9fbff;
            }

        .table td {
            text-align: center;
            padding: 14px;
            border: none;
            vertical-align: middle;
        }

    .badge {
        padding: 7px 14px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .badge-success {
        background-color: #d4edda;
        color: #198754;
    }

    .badge-warning {
        background-color: #fff3cd;
        color: #856404;
    }

    .badge-danger {
        background-color: #f8d7da;
        color: #842029;
    }

    .badge-info {
        background-color: #d1ecf1;
        color: #0c5460;
    }

    .badge-primary {
        background-color: #cce5ff;
        color: #004085;
    }

    .badge-dark {
        background-color: #343a40;
        color: #ffffff;
    }

    .btn-view {
        background: linear-gradient(45deg, #007bff, #0056b3);
        border: none;
        color: white;
        font-weight: 600;
        border-radius: 8px;
        padding: 6px 14px;
        transition: 0.2s;
    }

        .btn-view:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #0056b3, #007bff);
        }

    .btn-book {
        background: linear-gradient(45deg, #28a745, #20c997);
        border: none;
        color: white;
        font-weight: 600;
        border-radius: 8px;
        padding: 12px 24px;
        transition: 0.2s;
        text-decoration: none;
        display: inline-block;
    }

        .btn-book:hover {
            transform: scale(1.05);
            background: linear-gradient(45deg, #20c997, #28a745);
            color: white;
            text-decoration: none;
        }
</style>

<!-- SignalR Scripts -->
<script src="~/lib/microsoft-signalr/dist/browser/signalr.min.js"></script>
<script>
    // Get current user ID from session or hidden field
    const currentUserId = '@Model.CurrentUserId';
    
    if (currentUserId) {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/realtimehub")
            .build();

        connection.start().then(function () {
            console.log("SignalR Connected for Test Drive History");
            console.log("Current User ID:", currentUserId);
            // Join customer group
            connection.invoke("JoinGroup", `customer_${currentUserId}`).then(function() {
                console.log("Joined customer group:", `customer_${currentUserId}`);
            }).catch(function(err) {
                console.error("Failed to join customer group:", err);
            });
        }).catch(function (err) {
            console.error("SignalR Connection Error: ", err.toString());
        });

        // Listen for test drive status updates
        connection.on("TestDriveUpdated", function (data) {
            console.log(`Test drive updated: ${data.customerName} - ${data.vehicleName} - ${data.status}`);
            
            // Find the history row and update the status badge
            const historyRows = document.querySelectorAll('tr[data-order-id]');
            historyRows.forEach(row => {
                // You might need to match by customer name and vehicle name
                // For now, we'll show a general notification
                showNotification(`Lịch lái thử đã được cập nhật: ${data.status}`);
            });
        });

        // Listen for test drive cancellations
        connection.on("TestDriveCancelled", function (data) {
            console.log(`Test drive cancelled: ${data.customerName} - ${data.vehicleName}`);
            showNotification(`Lịch lái thử đã bị hủy: ${data.vehicleName}`);
        });

        // Show notification function
        function showNotification(message) {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = 'alert alert-info alert-dismissible fade show position-fixed';
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            notification.innerHTML = `
                <i class="fas fa-info-circle me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }
    }
</script>

<div class="orders-container">
    <h2>Lịch sử lái thử xe</h2>

@if (Model.History == null || !Model.History.Any())
{
        <div class="text-center text-muted py-4">
            <i class="fas fa-calendar-times" style="font-size: 3rem; margin-bottom: 20px; color: #6c757d;"></i>
            <h4>Chưa có lịch sử</h4>
            <p>Bạn chưa có lịch hẹn lái thử nào đã hoàn thành hoặc bị hủy.</p>
            <a asp-page="/BookTestDrive" class="btn-book">
                <i class="fas fa-plus"></i> Đặt lịch hẹn mới
            </a>
        </div>
}
else
{
        <table class="table align-middle">
            <thead>
                <tr>
                    <th>Xe</th>
                    <th>Đại lý</th>
                    <th>Ngày hẹn</th>
                    <th>Giờ hẹn</th>
                    <th>Trạng thái</th>
                    <th>Ghi chú</th>
                    <th>Xem</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var appointment in Model.History)
                {
                    var status = appointment.Status?.ToLowerInvariant();

                    var statusBadge = status switch
                    {
                        "completed" => "badge-success",
                        "done" => "badge-dark",
                        "cancelled" => "badge-danger",
                        _ => "badge-info"
                    };

                    <tr>
                        <td>@appointment.Vehicle?.Name</td>
                        <td>@appointment.Dealer?.Name</td>
                        <td>@appointment.AppointmentDate.ToString("dd/MM/yyyy")</td>
                        <td>@appointment.AppointmentDate.ToString("HH:mm")</td>
                        <td><span class="badge @statusBadge">@appointment.Status</span></td>
                        <td>
                            @if (!string.IsNullOrEmpty(appointment.Notes))
                            {
                                <span title="@appointment.Notes" style="font-size: 0.9rem;">
                                    @(appointment.Notes.Length > 20 ? appointment.Notes.Substring(0, 20) + "..." : appointment.Notes)
                                </span>
                            }
                            else
                            {
                                <span class="text-muted">—</span>
                            }
                        </td>
                        <td>
                            <a asp-page="/TestDrives/Details" asp-route-id="@appointment.Id" class="btn btn-view">
                                <i class="fas fa-eye"></i> Xem
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-center mt-4">
            <a asp-page="/BookTestDrive" class="btn-book">
                <i class="fas fa-plus"></i> Đặt lịch hẹn mới
            </a>
        </div>
}
</div>