@page
@model Assignment02.Pages.BookTestDriveModel
@{
    ViewData["Title"] = "Đặt lịch hẹn lái thử";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EV Dealer System</title>
    <link rel="stylesheet" href="~/css/appointments.css" asp-append-version="true" />
    <style>
        #toastContainer {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
        }

        .toast {
            padding: 12px 20px;
            margin-bottom: 10px;
            border-radius: 4px;
            color: #fff;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
        }

        .toast-success {
            background-color: #28a745;
        }

        .toast-error {
            background-color: #dc3545;
        }

        #vehicleImage {
            margin-top: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <h2>Đặt lịch hẹn lái thử</h2>

    <form method="post" id="bookingForm">
        <div class="form-group">
            <label for="DealerId">Chọn đại lý</label>
            <select asp-for="Appointment.DealerId" class="form-control" id="DealerId" required>
                <option value="">-- Chọn đại lý --</option>
                @foreach (var dealer in Model.Dealers)
                {
                    <option value="@dealer.Id">@dealer.Name - @dealer.Address</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="VehicleId">Chọn xe</label>
            <select asp-for="Appointment.VehicleId" class="form-control" id="VehicleId" required>
                <option value="">-- Chọn xe --</option>
                @foreach (var vehicle in Model.Vehicles)
                {
                    <option value="@vehicle.Id" data-image="@vehicle.Images">@vehicle.Name @vehicle.Model</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label>Hình ảnh xe</label>
            <div>
                <img id="vehicleImage" src="" alt="Hình ảnh xe" style="max-width: 300px; max-height: 200px; display: none;" />
            </div>
        </div>

        <div class="form-group">
            <label for="AppointmentDate">Chọn ngày</label>
            <input asp-for="Appointment.AppointmentDate" type="date" class="form-control" id="AppointmentDate" required min="@DateTime.Now.ToString("yyyy-MM-dd")" />
        </div>

        <div class="form-group">
            <label for="TimeSlot">Chọn giờ</label>
            <select asp-for="SelectedTimeSlot" class="form-control" id="TimeSlot" required>
                <option value="">-- Chọn giờ --</option>
                @foreach (var slot in Model.AvailableTimeSlots)
                {
                    <option value="@slot.AppointmentDate.ToString("HH:mm")">@slot.AppointmentDate.ToString("hh:mm tt")</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="Notes">Ghi chú</label>
            <textarea asp-for="Appointment.Notes" class="form-control" id="Notes" rows="4"></textarea>
        </div>

        <button type="submit" class="btn btn-primary">Đặt lịch</button>
    </form>

    @section Scripts {
        <script>
            // Function to show toast notification
            function showToast(message, isSuccess) {
                let toastContainer = document.getElementById('toastContainer');
                if (!toastContainer) {
                    toastContainer = document.createElement('div');
                    toastContainer.id = 'toastContainer';
                    toastContainer.style.position = 'fixed';
                    toastContainer.style.top = '20px';
                    toastContainer.style.right = '20px';
                    toastContainer.style.zIndex = '1000';
                    document.body.appendChild(toastContainer);
                }

                const toast = document.createElement('div');
                toast.className = `toast ${isSuccess ? 'toast-success' : 'toast-error'}`;
                toast.textContent = message;
                toast.style.padding = '12px 20px';
                toast.style.marginBottom = '10px';
                toast.style.borderRadius = '4px';
                toast.style.color = '#fff';
                toast.style.backgroundColor = isSuccess ? '#28a745' : '#dc3545';
                toast.style.boxShadow = '0 2px 4px rgba(0,0,0,0.2)';
                toast.style.opacity = '0';
                toast.style.transition = 'opacity 0.3s ease-in-out';

                toastContainer.appendChild(toast);

                setTimeout(() => {
                    toast.style.opacity = '1';
                }, 100);

                setTimeout(() => {
                    toast.style.opacity = '0';
                    setTimeout(() => {
                        toast.remove();
                    }, 300);
                }, 3000);
            }

            // Replace showModal with showToast
            function showModal(message, isSuccess) {
                showToast(message, isSuccess);
            }

            // Existing JavaScript code
            document.getElementById("DealerId").addEventListener("change", async function () {
                const dealerId = this.value;
                const date = document.getElementById("AppointmentDate").value;

                try {
                    const vehicleResponse = await fetch(`/BookTestDrive?handler=Vehicles&dealerId=${dealerId}`);
                    if (!vehicleResponse.ok) {
                        throw new Error('Lỗi tải danh sách xe');
                    }
                    const vehicles = await vehicleResponse.json();
                    const vehicleSelect = document.getElementById("VehicleId");
                    vehicleSelect.innerHTML = '<option value="">-- Chọn xe --</option>';
                    vehicles.forEach(v => {
                        const imageUrl = v.images && v.images.startsWith('[') ? JSON.parse(v.images)[0] : v.images;
                        vehicleSelect.innerHTML += `<option value="${v.id}" data-image="${imageUrl}">${v.brand} ${v.model} (${v.year})</option>`;
                    });

                    const vehicleImage = document.getElementById("vehicleImage");
                    vehicleImage.src = "";
                    vehicleImage.style.display = "none";

                    if (date) {
                        await updateTimeSlots(dealerId, date);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showModal('Lỗi khi tải danh sách xe. Vui lòng thử lại.', false);
                }
            });

            document.getElementById("VehicleId").addEventListener("change", function () {
                const selectedOption = this.options[this.selectedIndex];
                const imageUrl = selectedOption.getAttribute("data-image");
                const vehicleImage = document.getElementById("vehicleImage");

                if (imageUrl && imageUrl !== "null" && imageUrl !== "") {
                    vehicleImage.src = imageUrl;
                    vehicleImage.style.display = "block";
                } else {
                    vehicleImage.src = "";
                    vehicleImage.style.display = "none";
                }
            });

            document.getElementById("AppointmentDate").addEventListener("change", async function () {
                const dealerId = document.getElementById("DealerId").value;
                const date = this.value;
                if (dealerId && date) {
                    await updateTimeSlots(dealerId, date);
                }
            });

            async function updateTimeSlots(dealerId, date) {
                try {
                    const timeSlotResponse = await fetch(`/BookTestDrive?handler=TimeSlots&dealerId=${dealerId}&date=${date}`);
                    if (!timeSlotResponse.ok) {
                        throw new Error('Lỗi tải danh sách khung giờ');
                    }
                    const timeSlots = await timeSlotResponse.json();
                    const timeSlotSelect = document.getElementById("TimeSlot");
                    timeSlotSelect.innerHTML = '<option value="">-- Chọn giờ --</option>';
                    timeSlots.forEach(slot => {
                        const time = new Date(slot.appointmentDate).toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });
                        timeSlotSelect.innerHTML += `<option value="${time}">${time}</option>`;
                    });
                } catch (error) {
                    console.error('Error:', error);
                    showModal('Lỗi khi tải khung giờ. Vui lòng thử lại.', false);
                }
            }

            document.getElementById('bookingForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                const form = this;
                const formData = new FormData(form);

                const dateInput = document.getElementById('AppointmentDate').value;
                const selectedDate = new Date(dateInput);
                const today = new Date();
                today.setHours(0, 0, 0, 0);
                if (selectedDate < today) {
                    showModal('Ngày hẹn không thể là ngày trong quá khứ.', false);
                    return;
                }

                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData
                    });

                    if (!response.ok) {
                        throw new Error('Lỗi mạng hoặc server');
                    }

                    const result = await response.json();
                    showModal(result.message, result.success);

                    if (result.success) {
                        form.reset();
                        document.getElementById('VehicleId').innerHTML = '<option value="">-- Chọn xe --</option>';
                        document.getElementById('TimeSlot').innerHTML = '<option value="">-- Chọn giờ --</option>';
                        document.getElementById('vehicleImage').src = "";
                        document.getElementById('vehicleImage').style.display = "none";
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showModal('Đã xảy ra lỗi khi đặt lịch. Vui lòng thử lại.', false);
                }
            });
        </script>
    }
</body>
</html>