@page
@model ChatModel
@{
    ViewData["Title"] = "SignalR Chat";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2>SignalR Real-Time Chat</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div class="card">
                <div class="card-header">
                    <h5>Chat Room</h5>
                </div>
                <div class="card-body">
                    <div class="form-group mb-3">
                        <label for="userInput">Your Name:</label>
                        <input type="text" id="userInput" class="form-control" placeholder="Enter your name" />
                    </div>
                    <div class="form-group mb-3">
                        <label for="messageInput">Message:</label>
                        <input type="text" id="messageInput" class="form-control" placeholder="Type your message here..." />
                    </div>
                    <button id="sendButton" type="button" class="btn btn-primary" disabled>Send Message</button>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="card">
                <div class="card-header">
                    <h5>Messages</h5>
                </div>
                <div class="card-body">
                    <div id="messagesList" style="height: 300px; overflow-y: auto; border: 1px solid #ddd; padding: 10px; background-color: #f9f9f9;">
                        <!-- Messages will appear here -->
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5>Group Chat</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-4">
                            <input type="text" id="groupNameInput" class="form-control" placeholder="Group name" />
                        </div>
                        <div class="col-2">
                            <button id="joinGroupButton" type="button" class="btn btn-success" disabled>Join Group</button>
                        </div>
                        <div class="col-2">
                            <button id="leaveGroupButton" type="button" class="btn btn-warning" disabled>Leave Group</button>
                        </div>
                        <div class="col-4">
                            <button id="sendGroupMessageButton" type="button" class="btn btn-info" disabled>Send to Group</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5>Connection Status</h5>
                </div>
                <div class="card-body">
                    <div id="connectionStatus" class="alert alert-info">
                        Connecting...
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/microsoft-signalr/signalr.min.js"></script>
    <script>
        "use strict";

        var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
        var userInput = document.getElementById("userInput");
        var messageInput = document.getElementById("messageInput");
        var sendButton = document.getElementById("sendButton");
        var messagesList = document.getElementById("messagesList");
        var connectionStatus = document.getElementById("connectionStatus");
        var groupNameInput = document.getElementById("groupNameInput");
        var joinGroupButton = document.getElementById("joinGroupButton");
        var leaveGroupButton = document.getElementById("leaveGroupButton");
        var sendGroupMessageButton = document.getElementById("sendGroupMessageButton");

        // Disable buttons initially
        sendButton.disabled = true;
        joinGroupButton.disabled = true;
        leaveGroupButton.disabled = true;
        sendGroupMessageButton.disabled = true;

        // Connection event handlers
        connection.start().then(function () {
            connectionStatus.innerHTML = '<span class="text-success">? Connected to SignalR Hub</span>';
            connectionStatus.className = "alert alert-success";
            sendButton.disabled = false;
            joinGroupButton.disabled = false;
            leaveGroupButton.disabled = false;
            sendGroupMessageButton.disabled = false;
        }).catch(function (err) {
            connectionStatus.innerHTML = '<span class="text-danger">? Connection failed: ' + err.toString() + '</span>';
            connectionStatus.className = "alert alert-danger";
            console.error(err.toString());
        });

        // Handle connection closed
        connection.onclose(function () {
            connectionStatus.innerHTML = '<span class="text-warning">? Connection lost. Attempting to reconnect...</span>';
            connectionStatus.className = "alert alert-warning";
            sendButton.disabled = true;
            joinGroupButton.disabled = true;
            leaveGroupButton.disabled = true;
            sendGroupMessageButton.disabled = true;
        });

        // Receive messages
        connection.on("ReceiveMessage", function (user, message) {
            var li = document.createElement("div");
            li.className = "mb-2 p-2 border-bottom";
            li.innerHTML = "<strong>" + user + ":</strong> " + message + " <small class='text-muted'>(" + new Date().toLocaleTimeString() + ")</small>";
            messagesList.appendChild(li);
            messagesList.scrollTop = messagesList.scrollHeight;
        });

        // Handle user connection events
        connection.on("UserConnected", function (message) {
            var li = document.createElement("div");
            li.className = "mb-1 text-success small";
            li.textContent = message + " (" + new Date().toLocaleTimeString() + ")";
            messagesList.appendChild(li);
            messagesList.scrollTop = messagesList.scrollHeight;
        });

        connection.on("UserDisconnected", function (message) {
            var li = document.createElement("div");
            li.className = "mb-1 text-warning small";
            li.textContent = message + " (" + new Date().toLocaleTimeString() + ")";
            messagesList.appendChild(li);
            messagesList.scrollTop = messagesList.scrollHeight;
        });

        connection.on("UserJoined", function (message) {
            var li = document.createElement("div");
            li.className = "mb-1 text-info small";
            li.textContent = message + " (" + new Date().toLocaleTimeString() + ")";
            messagesList.appendChild(li);
            messagesList.scrollTop = messagesList.scrollHeight;
        });

        connection.on("UserLeft", function (message) {
            var li = document.createElement("div");
            li.className = "mb-1 text-secondary small";
            li.textContent = message + " (" + new Date().toLocaleTimeString() + ")";
            messagesList.appendChild(li);
            messagesList.scrollTop = messagesList.scrollHeight;
        });

        // Send message event
        sendButton.addEventListener("click", function (event) {
            var user = userInput.value || "Anonymous";
            var message = messageInput.value;
            if (message.trim() !== "") {
                connection.invoke("SendMessage", user, message).catch(function (err) {
                    console.error(err.toString());
                });
                messageInput.value = "";
            }
            event.preventDefault();
        });

        // Join group event
        joinGroupButton.addEventListener("click", function (event) {
            var groupName = groupNameInput.value;
            if (groupName.trim() !== "") {
                connection.invoke("JoinGroup", groupName).catch(function (err) {
                    console.error(err.toString());
                });
            }
            event.preventDefault();
        });

        // Leave group event
        leaveGroupButton.addEventListener("click", function (event) {
            var groupName = groupNameInput.value;
            if (groupName.trim() !== "") {
                connection.invoke("LeaveGroup", groupName).catch(function (err) {
                    console.error(err.toString());
                });
            }
            event.preventDefault();
        });

        // Send group message event
        sendGroupMessageButton.addEventListener("click", function (event) {
            var user = userInput.value || "Anonymous";
            var message = messageInput.value;
            var groupName = groupNameInput.value;
            if (message.trim() !== "" && groupName.trim() !== "") {
                connection.invoke("SendMessageToGroup", groupName, user, message).catch(function (err) {
                    console.error(err.toString());
                });
                messageInput.value = "";
            }
            event.preventDefault();
        });

        // Allow enter key to send message
        messageInput.addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                sendButton.click();
                event.preventDefault();
            }
        });

        // Allow enter key to join group
        groupNameInput.addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                joinGroupButton.click();
                event.preventDefault();
            }
        });
    </script>
}